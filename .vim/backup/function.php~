<?php

function merge($master, $slave){
	if(!is_array($master)){ $master = array();}
	if(count($slave) > 0){
		foreach($slave as $k=>$v){
			$master[$k] = $v;
		}
	}
	return $master;
}

function print_p($var) {
	echo '<pre>';
	print_r($var);
	echo '</pre>';
}

function parse_config_users($users, $diffusion = array()) {
	$return = array('users'=>array(), 'details' => array());
	$row = 0;		
	$title = array();
	$field_complements = array('URL_LOGO', 'URL_ANNONCE', 'SQUAREBOX');
	if(!empty($users)){
		foreach($users as $usercode => $data){
			$return['users'][] = $usercode;
			$return['details'][$usercode] = $data;
			foreach($field_complements as $v){
	    		if($data[$v] != "") $return[$v][$usercode] = $data[$v];
	    	}
		}	
	}
	return $return;
}

function parse_config_csv($file, $separator = "|", $diffusion = array()) {
	$return = array('logins'=>array(), 'users'=>array(), 'details' => array());
	$row = 0;		
	$title = array();
	$field_complements = array('url_logo', 'url_annonce', 'squarebox');
	if (($handle = fopen($file, "r")) !== FALSE) {
	    while (($data = fgetcsv($handle, 1024, $separator)) !== FALSE) {
    		if($row == 0) {
    			$title = $data;
    		} else {
    			for($i=0; $i < count($title);$i++) $data[$title[$i]] = $data[$i];
    			$usercode = isset($data['usercode']) ? $data['usercode'] : $data['USERCODE'];
    			$return['users'][] = $usercode;
    			$return['details'][$usercode] = $data;
    			if($data['OPTIONS'] !== ""){
    				$tmp_options = explode('&', $data['OPTIONS']);
					$tmp_sub_options = array();
					if(count($tmp_options) > 1){
						foreach($tmp_options as $tmp_options_value){
							$tmp_options_item = explode('=',$tmp_options_value);
							$tmp_sub_options[$tmp_options_item[0]] = $tmp_options_item[1];
						}
						
					}else{
						$tmp_options_item = explode('=',$data['OPTIONS']);
						$tmp_sub_options[$tmp_options_item[0]] = $tmp_options_item[1];
					} 				
    				$return['options'][$usercode] = $tmp_sub_options;    				
    			}
    			if(count($diffusion) == 0){
	    			$diffusion = array('FACEBOOK','FACEBOOK_WALL','TWITTER','YOUTUBEFR','YOUTUBEUS',	'YOUTUBECORP',	'DAILYMOTION','KEWEGO','WAT','YAHOO', 'SELOGER','SQUAREHABITAT', 'ABDEVELOPPEMENT','AGENCESREUNIES','OLX','YAKAZ','MERCADOLIBRE','TROVIT','ZONAPROP','VIVASTREET','ADOOS','ADPOST','CLASSIFICADOSMIL','EMARKET','GUMTREE','KAPAZA','QUIKR','SEGUNDAMANO','TABLICA');
	    		}
    			foreach($diffusion as $diff) {
    				if($data[strtolower($diff)]){ 
    					$data_diff =  strtolower($diff); 
    					$data_diff_pwd = strtolower($diff)."_pwd";
    					$data_diff_imap = strtolower($diff)."_imap"; 
    				}else{
    					$data_diff =  $diff; 
    					$data_diff_pwd = $diff."_PWD";
    					$data_diff_imap = strtolower($diff)."_IMAP";
    				}
    				if($data[$data_diff] != "") {
    						$return['logins'][$usercode][$diff]['LOGIN'] = $data[$data_diff];
						    $return['logins'][$usercode][$diff]['PASSWORD'] = $data[$data_diff_pwd];
						    if($data[$data_diff_imap] != ""){
							    $return['logins'][$usercode][$diff]['DSN_IMAP'] = $data[$data_diff_imap];
							}
					}
    			}
    			//print_p($data);
    			foreach($field_complements as $v){
	    			if($data[$v] != "") $return[$v][$usercode] = $data[$v];
	    		}
    	}
    	$row++;
    }
		fclose($handle);
	}
	return $return;
}


function convert_area($val, $unit_from, $unit_to, $debug=false) {
	try {
		$tab_keys = array(
			'1' => 'm2',
			'2' => 'sqft',
			'3' => 'acres',
			'4' => 'ha'
		);

		$tab_ratios = array(
			'm2_m2' => 1,
			'm2_acres' => 0.00024710538146717,
			'm2_sqft' => 10.76391041671,
			'm2_ha' => 0.0001
		);

		if(!isset($tab_keys[ $unit_from ])) {
			throw new Exception('missing unit from');
		}

		if(!isset($tab_keys[ $unit_to ])) {
			throw new Exception('missing unit to');
		}
		
		$final_ratio  = 1.0;
		$final_ratio /= $tab_ratios[ 'm2_'.$tab_keys[ $unit_from ] ];
		$final_ratio *= $tab_ratios[ 'm2_'.$tab_keys[ $unit_to ] ];
		
		if($debug) {
			return $val.' '.$tab_keys[ $unit_from ].' = '.((float)$val * $final_ratio).' '.$tab_keys[ $unit_to ];
		} else {
			return (float)$val * $final_ratio;
		}
	} catch(Exception $e) {
		if($debug) {
			echo $e->getMessage();
		}
		return null;
	}
}


function replace_accents($str) {
	$str = htmlentities($str, ENT_COMPAT, "UTF-8");
	$str = preg_replace( '/&([a-zA-Z])(uml|acute|grave|circ|tilde);/', '$1',$str);
	return html_entity_decode($str);
}

function get_final_url_seloger($data, $siteweb, $file){
	$rebuitUrl = "";
	$idtypeBien = '1,2,3,4';
	switch($data['ID_TYPE_BIEN']){
		case 1 :
			$idtypeBien = 1;
			break;
		case 2 :
			$idtypeBien = 2;
			break;
		case 3 :
			$idtypeBien = 3;
			break;
		case 12 :
			$idtypeBien = 4;
			break;
		default :
			$idtypeBien = '1,2,3,4';
			break;
	}
	
	switch($data['ID_TYPE_TRANSACTION']){
		case 1 :
			$idtt = 2;
			break;
		case 2:
			$idtt = 1;
			break;
		default :
			$idtt = '1,2';

	}
	$url = $siteweb.'/rss.xml?nb_pieces='.urlencode($data['NOMBRE_PIECE']).'idpays=250&idtt='.urlencode($idtt).'&idtypebien='.urlencode($idtypeBien).'&lang=fr&page_ok=%2frecherche,basic.htm&pxmax='.urlencode($data['PRIX_BIEN']).'&pxmin='.urlencode($data['PRIX_BIEN']).'&cp='.urlencode($data['CODE_POSTAL']).'&cp='.urlencode($data['VILLE']).'';
	$rss = file_get_contents($url);
	$xml = simplexml_load_string($rss);
	if(!simplexml_load_string($rss)) {
		if($_GET['test']){
			echo "<font color='red'>Can not load FILE for (".$data['USERCODE'].") ----------------- </font>";
		}else{
			import_log("<font color='red'>Can not load FILE for (".$data['USERCODE'].") </font>","periclesftp");
		}
		return $rebuitUrl;
	}
	if(count($xml->channel->item) < 1 ){
		//return $siteweb;
		$rebuitUrl = "";
		//stock_url_seloger($data['REF_PORTAIL'], $rebuitUrl, $data['USERCODE'], $file); NE PAS STOCKER LES BIENS NON TROUVES
		//echo "not resultSet for this request!<br/>"; 
	} elseif(count($xml->channel->item) > 1 ){
		//echo 'cpt > 1<br/>';
		foreach($xml->channel->item as $item){
			$links[$data['REF_PORTAIL']][] = $item->link.'';
		}
		$rebuitUrl = parse_url_seloger($links);
		if($rebuitUrl !== false){
			stock_url_seloger($data['REF_PORTAIL'], $rebuitUrl,$data['USERCODE'], $file);
		} else {			
			//not found!
			$rebuitUrl = "";
			//return $siteweb; NE PAS STOCKER LES BIENS NON TROUVES
			//stock_url_seloger($data['REF_PORTAIL'], $rebuitUrl,$data['USERCODE'], $file);
		}
	} else {
		//echo 'un url pour un bien trouv√©<br/>';
		$rebuitUrl = $xml->channel->item->link.'';
		stock_url_seloger($data['REF_PORTAIL'], $rebuitUrl,$data['USERCODE'], $file);
	}
	return $rebuitUrl;
}

function stock_url_seloger($ref, $url, $usercode, $file){
	//echo ' in stock bidule<br/>';
	$fp = $file;
	$data = $ref.'|'.$url."\r\n";
	file_put_contents($fp, $data, FILE_APPEND);
	echo 'USER : '.$usercode.' REF: '.$ref.' URL : '.$url.' ==> '.$fp.'<br/>';
}

function get_seloger_url($annonce, $siteweb, $pfile){
	if(strpos($siteweb, 'http://') === false) { $siteweb = "http://".$siteweb; }
	$returnUrl = '';
	$file = PATH_CACHE.$pfile;
	if(!file_exists($file)){
		touch($file);
	}
	//echo $file.'<br/>';
	$row = 0;
	if (($handle = fopen($file, "r")) !== FALSE) {
		while (($data = fgetcsv($handle, 0, "|")) !== FALSE) {
			if($data[0] == $annonce['REF_PORTAIL']){
				//echo 'url to return found : '.$data[1].'<br/>';
				return $data[1];
				//sortie de la fonction
			}
			$row++;
		}
		fclose($handle);
	}
	//echo 'url not found in file => go to get it on line<br/>';
	$returnUrl = get_final_url_seloger($annonce, $siteweb, $file);
	return $returnUrl;
}

function parse_url_seloger($urls){
	foreach ($urls[key($urls)] as $ref => $url){
		//echo $url.'<br/>';
		$content = file_get_contents($url);
		$pattern = '/'.key($urls).'/';
		if(preg_match($pattern, $content, $matches)){
			//print_r($matches);
			return $url;
		}
	}
	return false;
}
function get_enabled_accounts($file, $sep='|') {
	$tab_agents = array();
	if(is_file($file)) {
		$handle = fopen($file, 'r');
		$tab_label_cols = array();
		if($handle !== false) {
			while(!feof($handle)) {
				if(empty($tab_label_cols)) {
					$tab_label_cols = fgetcsv($handle, 1000, $sep);
				} else {
					$row = fgetcsv($handle, 1000, $sep);
					$fields = count($row);
					if(!empty($row[0])) {
						for($i=1; $i<$fields; $i++) {
							$tab_agents[ $row[0] ][ strtoupper($tab_label_cols[$i]) ] = $row[$i];
						}
					}
				}
			}
			fclose($handle);
		}
	}
	return $tab_agents;
}

function fix_dpe_val($dpe) {
	$dpe = (int)$dpe;
	if($dpe>0 && $dpe<=50) 			return 'A';
	else if($dpe>50 && $dpe<=90) 	return 'B';
	else if($dpe>90 && $dpe<=150) 	return 'C';
	else if($dpe>150 && $dpe<=230) 	return 'D';
	else if($dpe>230 && $dpe<=330) 	return 'E';
	else if($dpe>330 && $dpe<=450) 	return 'F';
	else if($dpe>450) 				return 'G';
	else return '';
}

function fix_ges_val($ges) {
	$ges = (int)$ges;
	if($ges>0 && $ges<=5) return 'A';
	else if($ges>5 && $ges<=10) return 'B';
	else if($ges>10 && $ges<=20) return 'C';
	else if($ges>20 && $ges<=35) return 'D';
	else if($ges>35 && $ges<=55) return 'E';
	else if($ges>55 && $ges<=80) return 'F';
	else if($ges>80) return 'G';
	else return '';
}

function is_email($str) {
    return preg_match('/^[a-z0-9_\-]+(\.[_a-z0-9\-]+)*@([_a-z0-9\-]+\.)+([a-z]{2}|aero|arpa|biz|com|coop|edu|gov|info|int|jobs|mil|museum|name|nato|net|org|pro|travel)$/', $str);
}

function human_size($size) {
	$tab_units = array('b', 'kb', 'mb', 'gb', 'tb');
	$i = 0;
	$size = (double)$size;
	while($size >= 1024 && $i++<count($tab_units)-1) {
		$size /= 1024.0;
	}
	if(isset($tab_units[$i])) {
		return round($size, 2).$tab_units[$i];
	} else {
		return round($size, 2).array_pop($tab_units);
	}
}


/*
 * Multi order function
 */
function array_csort() {  
   $args = func_get_args();
   $marray = array_shift($args);
   $msortline = "return(array_multisort(";
   foreach ($args as $arg) {
       $i++;
       if (is_string($arg)) {
           foreach ($marray as $row) {
               $sortarr[$i][] = $row[$arg];
           }
       } else {
           $sortarr[$i] = $arg;
       }
       $msortline .= "\$sortarr[".$i."],";
   }
   $msortline .= "\$marray));";
   eval($msortline);
   return $marray;
}
function format_phone($phone,$format='US')
{
	$phone = preg_replace("/[^0-9]/", "", $phone);
	switch($format){
		case 'US':
			if(strlen($phone) == 7)
				return preg_replace("/([0-9]{3})([0-9]{4})/", "$1-$2", $phone);
			elseif(strlen($phone) == 10)
				return preg_replace("/([0-9]{3})([0-9]{3})([0-9]{4})/", "$1-$2-$3", $phone);
			else
				return $phone;
		break;
		default:
		return $phone;
		break;
	}
}

/*
 * Format datetime
 */
function format_time($time, $text = array('days' => " days + ", 'hours' => "h ", 'minutes' => "m ", 'seconds' => "s ")) {
	$text_time = "";
	$min   = $time / 60;
	$hours = $min / 60;
	$days  = floor($hours / 24);
	$hours = floor($hours - ($days * 24));
	$min   = floor($min - ($days * 60 * 24) - ($hours * 60));
	$sec   = round((($time / 60) - floor($time / 60)) *60);
	if($days != 0)  $text_time .= $days.$text['days'];
	if($hours < 10) $text_time .= "0".$hours.$text['hours'];
	else $text_time .= $hours.$text['hours'];
	if($min < 10) $text_time .= "0".$min.$text['minutes'];
	else $text_time .= $min.$text['minutes'];
	if($sec < 10) $text_time .= "0".$sec.$text['seconds'];
	else $text_time .= $sec.$text['seconds'];
	return $text_time;
}

/*
 * mail prod
 */
function mail_prod($message, $content = "", $email = "prod@previsite.com") {
    return mail($email, date('Y-m-d H:i:s')." ".$message, $content, "From: prod@previsite.com\r\nX-Priority: 1");
}

/**
* DB
**/

function fix_smalldatetime($chaine){
	$return = "";
	if(preg_match('/^(\d{4})-(\d{2})-(\d{2})$/i', trim($chaine)) > 0){
		$return = $chaine;
	}
	return $return;
}

function fix_datetime($chaine){
	$return = "";
	if(preg_match('/^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})$/i', trim($chaine)) > 0 || preg_match('/^(\d{4})-(\d{2})-(\d{2})$/i', trim($chaine)) > 0){
		$return = $chaine;
	}
	return $return;
}

function br2nl($str) {
	return preg_replace('#<br\s?\/?>#i', "\n", $str);
}

function debug_string($str) {
	$i=0;
	$delim = "\n";
	if(!isset($_SERVER['SHELL'])) {
		$delim = nl2br($delim);
	}
	echo $delim.$str;
	while(isset($str[$i])) {
		echo $delim.str_pad($i, 3, '0', STR_PAD_LEFT).': '.$str[$i].' (ascii:'.ord($str[$i]).')';
		$i++;
	}
}
function fix_ascii($str){

	// mettre les combinaisons de caractere au debut

	$str = str_replace(chr(169).chr(102).chr(195).chr(169), '-', $str); // -
	$str = str_replace(chr(195).chr(131).chr(194).chr(167), '√ß', $str); // √ß
	$str = str_replace(chr(195).chr(131).chr(194).chr(168), '√®', $str); // √®
	$str = str_replace(chr(195).chr(131).chr(194).chr(169), '√©', $str); // √©
	$str = str_replace(chr(195).chr(131).chr(194).chr(170), '√™', $str); // √©
	$str = str_replace(chr(195).chr(131).chr(194).chr(174), '√Æ', $str); // √Æ
	$str = str_replace(chr(195).chr(130).chr(194).chr(178), '¬≤', $str); // ¬≤	
	$str = str_replace(chr(195).chr(131).chr(194).chr(160), '√†', $str); // √†
	$str = str_replace(chr(195).chr(131).chr(194).chr(180), '√¥', $str); // √¥
	$str = str_replace(chr(195).chr(131).chr(194).chr(162), '√¢', $str); // √¢
	$str = str_replace(chr(195).chr(130).chr(194).chr(176), '¬∞', $str); // ¬∞ degre
	
	$str = str_replace(chr(226).chr(128).chr(153), "'", $str);
	$str = str_replace(chr(226).chr(128).chr(147), '-', $str);
	$str = str_replace(chr(226).chr(128).chr(148), '-', $str);
	$str = str_replace(chr(226).chr(128).chr(162), '-', $str); // separateur bizarre en forme de point
	$str = str_replace(chr(194).chr(39), "'", $str);
	$str = str_replace(chr(195).chr(168), "√®", $str);
	$str = str_replace(chr(195).chr(169), "√©", $str);
	$str = str_replace(chr(194).chr(178), "¬≤", $str);
	$str = str_replace(chr(195).chr(145), "√ë", $str);
	$str = str_replace(chr(195).chr(179), "√≥", $str);
	$str = str_replace(chr(195).chr(147), "√ì", $str);
	$str = str_replace(chr(195).chr(141), "√ç", $str);
	$str = str_replace(chr(194).chr(150), '', $str);
	$str = str_replace(chr(194).chr(146), "'", $str);
	$str = str_replace(chr(194).chr(156), 'oe', $str); // ligature oe
	$str = str_replace(chr(197).chr(147), 'oe', $str); // ligature oe

	// mettre les 145-148 seuls √† la fin  car empeche les replace pour les compos√©s : 195+147
	$str = str_replace(chr(145), "'", $str);
	$str = str_replace(chr(146), "'", $str);
	$str = str_replace(chr(240), "", $str);
	$str = str_replace(chr(147), '"', $str);
	$str = str_replace(chr(148), '"', $str);
	$str = str_replace(chr(96), "'", $str);
	$str = str_replace('', "", $str);
	for($i=0; $i< 32; $i++) {
		$str = str_replace(chr($i), '', $str);
	}
	return $str;
//	return utf8tohtml($str);
}

function clean_utf8($str) {
	for($i=0; $i< 32; $i++) {
		$str = str_replace(chr($i), '', $str);
	}
	return utf8tohtml($str);
}

function utf8tohtml($utf8, $encodeTags=true) {
	$result = '';
	for ($i = 0; $i < strlen($utf8); $i++) {
		$char = $utf8[$i];
		$ascii = ord($char);
		if ($ascii < 128) {
			// one-byte character
			$result .= ($encodeTags) ? htmlentities($char , ENT_QUOTES, 'UTF-8') : $char;
		} else if ($ascii < 192) {
		      // non-utf8 character or not a start byte
		} else if ($ascii < 224) {
			// two-byte character
			$result .= htmlentities(substr($utf8, $i, 2), ENT_QUOTES, 'UTF-8');
			$i++;
		} else if ($ascii < 240) {
			// three-byte character
			$ascii1 = ord($utf8[$i+1]);
			$ascii2 = ord($utf8[$i+2]);
			$unicode = (15 & $ascii) * 4096 + 
			(63 & $ascii1) * 64 + 
			(63 & $ascii2);
			$result .= "&#$unicode;";
			$i += 2;
		} else if ($ascii < 248) {
			// four-byte character
			$ascii1 = ord($utf8[$i+1]);
			$ascii2 = ord($utf8[$i+2]);
			$ascii3 = ord($utf8[$i+3]);
			$unicode = (15 & $ascii) * 262144 +
				(63 & $ascii1) * 4096 +
				(63 & $ascii2) * 64 +
				(63 & $ascii3);
			$result .= "&#$unicode;";
			$i += 3;
		}
	}
	$result = html_entity_decode($result, ENT_QUOTES, 'UTF-8');
	return iconv(mb_detect_encoding($result), 'UTF-8//TRANSLIT', $result);
}

function fix_xml($input){
	return str_replace(array('&', '<', '>', '\'', '"','','',''), array('&amp;', '&lt;', '&gt;', '&apos;', '&quot;',' ',' ',' '), str_replace('&amp;','&',$input));
}
/* Fonction de fixation de texte */
function fix_text($chaine, $taille = "") {
	if($taille != "") $chaine = substr($chaine, 0, $taille);
	$chaine = str_replace(array("'",'‚Äù','‚Äú',"‚Äô"), array("''",'"','"',"''"), $chaine);
	$chaine = str_replace(chr(231).chr(8),chr(44), $chaine);
	return trim($chaine);
}
/* Fonction de fixation de r√©el */
function fix_real($chaine) {
	$chaine = str_replace(",", ".", $chaine);
	$chaine = preg_replace("/[^0-9-\.]/i", "", $chaine);
	return trim($chaine);
}

function fix_real_us($chaine) {
	$chaine = fix_real($chaine);
	$chaine = str_replace('.00', '', $chaine);
	return $chaine;
}

/* Fonction de fixation de r√©el */
function fix_real2($chaine) {
	$chaine = str_replace(",", ".", $chaine);
	return trim($chaine);
}


/* Fonction de fixation d entier */
function fix_int($chaine, $strict=true) {
//	if($strict) {
//		if(ereg("[^0-9]*", $chaine)) $chaine = 0;
//	} else {
//		$expreg = "([^0-9]*)([0-9]*)";
//		$chaine = ereg_replace($expreg, "\\2", $chaine);
//	}
//	return trim($chaine);

	// modif RS 2010-09-02 pour gerer les valeurs negatives
	//    return preg_replace('/\D/i','',$chaine);


	// remplacement des virgules si float au format us
	$chaine = fix_real($chaine);

	// suppression de tout caractere non valide et retour de la partie entiere seulement
	return (int) preg_replace('/[^0-9-\.]?/', '', $chaine);
}

function fix_tinyint($chaine){
	$chaine = fix_int($chaine);
	if($chaine > 0 && $chaine < 255){
		return $chaine;
	}
	return "";
}

function fix_smallint($chaine){
	$chaine = fix_int($chaine);
	if($chaine >= -32768 && $chaine <= 32767){
		return $chaine;
	}
	return "";
}

/* Fonction de cr√©ation de MS GUID */
function generate_guid() {
	$cle = strtoupper(md5(uniqid(rand(), true)));
	$cle2 = "";
	for($i=0; $i<strlen($cle); $i++) {
		if($i==8)  $cle2 .= "-";
		if($i==12) $cle2 .= "-";
		if($i==16) $cle2 .= "-";
		if($i==20) $cle2 .= "-";
		$cle2 .= $cle[$i];
	}
	return $cle2;
}

function is_guid($str) {
    return preg_match('/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i', $str);
}

/* Fonction de benchmark */
function getmicrotime(){
   list($usec, $sec) = explode(" ", microtime(true));
   return ((float)$usec + (float)$sec);
}

/**
* LOG
**/
function write_cron_log($msg, $suffixe = ""){
	if($file == ""){ $file = CRON_LOG_FILE;}
	$hour = date('YmdH');
	$file = str_replace(array('#NAME#', '#DATE#'), array(get_server_name().($suffixe != "" ? "_".$suffixe : ""), $hour), $file);
	echo $file."<br />";
	if($msg != ""){
		$msg .= " - (PID ".getmypid()." ram usage: ".(ceil(memory_get_usage()/1024.0))."kb)";
		//file_put_contents($file, date('Y-m-d H:i:s - ').$msg."\n".substr(file_get_contents($file),0,50000));
		file_put_contents($file, date('Y-m-d H:i:s - ').$msg."\n".file_get_contents($file));
	}
	exec("find ".str_replace($hour, "-*", $file)." -mtime 1 -exec rm {} \;");
}

function export_log($log, $name_script) {
	import_log($log, $name_script,'export_');
}

function import_log($log, $name_script, $prefix = '') {
	if($name_script != ""){
		$name_script = $name_script;
		if($file == "") $file = PATH_LOG.$prefix.$name_script.date('-Y-m-d').".log";

		// 2010-11-05 RS : ajout du pid et usage de la ram 
		$log .= " - (PID ".getmypid()." ram usage: ".(ceil(memory_get_usage()/1024.0))."kb)";

	 	$log = date('Y-m-d H:i:s')." ".$log."\r\n";
		if(file_exists($file)) {
		  $fp = @fopen($file, "r");
		  $content = fread($fp, 3000000);
		  @fclose($fp);
		}
		$fp = @fopen($file, "w+");
		@fputs($fp, $log.$content);
		@fclose($fp);
	}
}

/**
*
* checkRedirection()
* @param 	string url		Url http or ftp
* @return 	string url
*/
function checkRedirection($url){
	$return = "";
	if($url != ""){
		if(preg_match('/^ftp:\/\//i', $url) > 0){ return $url;}
		$header = get_headers($url);
		if(preg_match('/200/i', $header[0]) >0 ){ return $url;}
		
		$tab_info_old = @parse_url($url);
		
		for($i=0;$i < 3 && preg_match('/30(1|2)/i', $header[0]) > 0;$i++){
			$result = "";
			foreach($header as $v){
				if(preg_match('/location: (.+)/i', $v, $result) > 0){ break;}
			}
			if($result[1] != ""){ 
				$url = $result[1];
				$tab_info_new = @parse_url($url);

				// 2011-06-21 RS : Bug lorsque le 302 ne contient pas le host
				// Ex : http://www.planitron.com/imhotepapp/ws/export/getphoto.aspx?date=20110526112952&aff_id=075006A00324&photonum=3
				if(empty($tab_info_new['scheme']) && empty($tab_info_new['host']) && !empty($tab_info_new['path'])) {
					$url = $tab_info_old['scheme'].'://'.$tab_info_old['host'].$tab_info_new['path'];
				}

				$return = $url;
			}else{ break;}

			$header = get_headers($url);
		}
	}
	return $return;
}

/**
 * get_content()
 *
 * @param   string  url         Url to fetch in http or ftp
 * @param   string  pathfile    Path to copy in ftp or just file
 * @param   boolean get         Option to list and fetch all files in FTP
 * @param   boolean erase       Option to erase fetched files in FTP
 * @return  mixed               Return content or boolean or number of fetched files
 */
function get_content($url, $pathfile = "", $get = "", $erase = false, $overwrite = true) {
    if($pathfile == "") {           // return content
		if(function_exists('curl_init')) {
			$url = checkRedirection($url);
			$ch = curl_init();
		    curl_setopt($ch, CURLOPT_URL, $url);
		    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_MAXREDIRS, 3);
		    $content = curl_exec($ch);
		    curl_close($ch);
		}else{
			$content = @file_get_contents($url);
		} 
    }else if($get == "") {          // create file & return boolean
		if(file_exists($pathfile) && $overwrite) {
			$content = true;
		}else{
			if(function_exists('curl_init')) {
				$url = checkRedirection($url);
				$ch = curl_init();
			    curl_setopt($ch, CURLOPT_URL, $url);
			    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
//   			    curl_setopt($ch, CURLOPT_TIMEOUT, 60);
			    $content = curl_exec($ch);
			    curl_close($ch);
			}else{
				$content = @file_get_contents($url);
			}
	        $content = create_file($pathfile, $content);
		}
    }else if(is_array($get)) {      // create files & return number
        $content = 0;
        $u = parse_url($url);
        $handle = @ftp_connect($u['host']);
        if(@ftp_login($handle, $u['user'], $u['pass'])) {
            @ftp_pasv($handle, true);
            $list = @ftp_nlist($handle, ".".$u['path']);
            if(count($list) > 0) create_dir($pathfile);
            for($i=0; $i < count($list); $i++) {           
                if(in_array(pathinfo($list[$i], PATHINFO_EXTENSION), $get)) {
					if(file_exists($pathfile.basename($list[$i])) && !$overwrite) {
						$content++;
					}else{
				        if(@ftp_get($handle, $pathfile.basename($list[$i]), $list[$i], FTP_BINARY)) {
	                        $content++;
	                        if($erase) @ftp_delete($handle, $list[$i]);
	                    }
					}
                }
            }
            @ftp_close($handle);
        }       
    }
    usleep(5000);
    return $content;
}       

/**
 * create_file()
 *
 * @param   string  file    Filename to send
 * @param   string  text    Text
 * @param   string  ext     Extension to add
 * @return  boolean         Return true if success
 */
function create_file($file, $text = "", $ext = ".TMP") {
    $return = false;
    $fp = fopen($file.$ext, "w+");
    if($fp){
		if(fputs($fp, $text)) $return = true;
		@fclose($fp);
	}
    usleep(2000);
    if($ext != "") {
        if(file_exists($file.$ext) && copy($file.$ext, $file)) $return = true;
        else $return = false;
        @unlink($file.$ext);
    }
    return $return;
}

/**
 * create_dir()
 *
 * @param   string  directory   Directory to create
 * @return  boolean             Return true if success
 */
function create_dir($directory) {
    if(file_exists($directory)) return true;
    exec(MAKEDIR." \"".$directory."\"", $sh);
    if(file_exists($directory)) return true;
    return false;
}


function sendMail($from, $fromname, $subject, $data,$copy='')
{
	$phpmail = new PHPMailer();
	$phpmail->IsSMTP();
	$phpmail->IsHTML(true);
	$phpmail->Host      = SMTP_MAIL;
	$phpmail->From      = $from; //"periclesftp@previsite.com";
	$phpmail->FromName  = $fromname; //'Pericles Import';
	$phpmail->WordWrap  = 70;
	$phpmail->Subject   = $subject; //'[ALERT] AGENT PERICLES INCONNU';

	$body  				= " - server:gateway2 ".(get_server_name())."<br />";	
	$body  				.= " - date:".date('Y-m-d H:i:s')."<br/>";
	$body  	 			.= $data;
	$phpmail->Body      = $body;
	$phpmail->AddAddress("gateway@previsite.com","gateway");
	if(!empty($copy) && is_email($copy)){
		$phpmail->AddCC($copy, $copy);
	}
	$phpmail->Send();
}

/* Fonction de recuperation du pays */
function fix_pays($ref_pays, $default = "FR") {
    if(trim($ref_pays) == "") return $default;
    if(strlen($ref_pays) <= 3) {
        // Iso standard 2 caracteres
        $iso3166a = array('AD','AE','AF','AG','AI','AL','AM','AN','AO','AQ','AR','AS','AT','AU','AW','AX','AZ','BA','BB','BD','BE','BF','BG','BH','BI','BJ','BM','BN','BO','BR','BS','BT','BV','BW','BY','BZ','CA','CC','CD','CF','CG','CH','CI','CK','CL','CM','CN','CO','CR','CS','CU','CV','CX','CY','CZ','DE','DJ','DK','DM','DO','DZ','EC','EE','EG','EH','ER','ES','ET','FI','FJ','FK','FM','FO','FR','GA','GB','GD','GE','GF','GG','GH','GI','GL','GM','GN','GP','GQ','GR','GS','GT','GU','GW','GY','HK','HM','HN','HR','HT','HU','ID','IE','IL','IM','IN','IO','IQ','IR','IS','IT','JE','JM','JO','JP','KE','KG','KH','KI','KM','KN','KP','KR','KW','KY','KZ','LA','LB','LC','LI','LK','LR','LS','LT','LU','LV','LY','MA','MC','MD','MG','MH','MK','ML','MM','MN','MO','MP','MQ','MR','MS','MT','MU','MV','MW','MX','MY','MZ','NA','NC','NE','NF','NG','NI','NL','NO','NP','NR','NU','NZ','OM','PA','PE','PF','PG','PH','PK','PL','PM','PN','PR','PS','PT','PW','PY','QA','RE','RO','RU','RW','SA','SB','SC','SD','SE','SG','SH','SI','SJ','SK','SL','SM','SN','SO','SR','ST','SV','SY','SZ','TC','TD','TF','TG','TH','TJ','TK','TL','TM','TN','TO','TR','TT','TV','TW','TZ','UA','UG','UM','US','UY','UZ','VA','VC','VE','VG','VI','VN','VU','WF','WS','YE','YT','ZA','ZM','ZW');
        // Iso standard 3 caracteres
        $iso3166b = array('AND'=>"AD",'ARE'=>"AE",'AFG'=>"AF",'ATG'=>"AG",'AIA'=>"AI",'ALB'=>"AL",'ARM'=>"AM",'ANT'=>"AN",'AGO'=>"AO",'ATA'=>"AQ",'ARG'=>"AR",'ASM'=>"AS",'AUT'=>"AT",'AUS'=>"AU",'ABW'=>"AW",'ALA'=>"AX",'AZE'=>"AZ",'BIH'=>"BA",'BRB'=>"BB",'BGD'=>"BD",'BEL'=>"BE",'BFA'=>"BF",'BGR'=>"BG",'BHR'=>"BH",'BDI'=>"BI",'BEN'=>"BJ",'BMU'=>"BM",'BRN'=>"BN",'BOL'=>"BO",'BRA'=>"BR",'BHS'=>"BS",'BTN'=>"BT",'BVT'=>"BV",'BWA'=>"BW",'BLR'=>"BY",'BLZ'=>"BZ",'CAN'=>"CA",'CCK'=>"CC",'COD'=>"CD",'CAF'=>"CF",'COG'=>"CG",'CHE'=>"CH",'CIV'=>"CI",'COK'=>"CK",'CHL'=>"CL",'CMR'=>"CM",'CHN'=>"CN",'COL'=>"CO",'CRI'=>"CR",'SCG'=>"CS",'CUB'=>"CU",'CPV'=>"CV",'CXR'=>"CX",'CYP'=>"CY",'CZE'=>"CZ",'DEU'=>"DE",'DJI'=>"DJ",'DNK'=>"DK",'DMA'=>"DM",'DOM'=>"DO",'DZA'=>"DZ",'ECU'=>"EC",'EST'=>"EE",'EGY'=>"EG",'ESH'=>"EH",'ERI'=>"ER",'ESP'=>"ES",'ETH'=>"ET",'FIN'=>"FI",'FJI'=>"FJ",'FLK'=>"FK",'FSM'=>"FM",'FRO'=>"FO",'FRA'=>"FR",'GAB'=>"GA",'GBR'=>"GB",'GRD'=>"GD",'GEO'=>"GE",'GUF'=>"GF",'GGY'=>"GG",'GHA'=>"GH",'GIB'=>"GI",'GRL'=>"GL",'GMB'=>"GM",'GIN'=>"GN",'GLP'=>"GP",'GNQ'=>"GQ",'GRC'=>"GR",'SGS'=>"GS",'GTM'=>"GT",'GUM'=>"GU",'GNB'=>"GW",'GUY'=>"GY",'HKG'=>"HK",'HMD'=>"HM",'HND'=>"HN",'HRV'=>"HR",'HTI'=>"HT",'HUN'=>"HU",'IDN'=>"ID",'IRL'=>"IE",'ISR'=>"IL",'IMN'=>"IM",'IND'=>"IN",'IOT'=>"IO",'IRQ'=>"IQ",'IRN'=>"IR",'ISL'=>"IS",'ITA'=>"IT",'JEY'=>"JE",'JAM'=>"JM",'JOR'=>"JO",'JPN'=>"JP",'KEN'=>"KE",'KGZ'=>"KG",'KHM'=>"KH",'KIR'=>"KI",'COM'=>"KM",'KNA'=>"KN",'PRK'=>"KP",'KOR'=>"KR",'KWT'=>"KW",'CYM'=>"KY",'KAZ'=>"KZ",'LAO'=>"LA",'LBN'=>"LB",'LCA'=>"LC",'LIE'=>"LI",'LKA'=>"LK",'LBR'=>"LR",'LSO'=>"LS",'LTU'=>"LT",'LUX'=>"LU",'LVA'=>"LV",'LBY'=>"LY",'MAR'=>"MA",'MCO'=>"MC",'MDA'=>"MD",'MDG'=>"MG",'MHL'=>"MH",'MKD'=>"MK",'MLI'=>"ML",'MMR'=>"MM",'MNG'=>"MN",'MAC'=>"MO",'MNP'=>"MP",'MTQ'=>"MQ",'MRT'=>"MR",'MSR'=>"MS",'MLT'=>"MT",'MUS'=>"MU",'MDV'=>"MV",'MWI'=>"MW",'MEX'=>"MX",'MYS'=>"MY",'MOZ'=>"MZ",'NAM'=>"NA",'NCL'=>"NC",'NER'=>"NE",'NFK'=>"NF",'NGA'=>"NG",'NIC'=>"NI",'NLD'=>"NL",'NOR'=>"NO",'NPL'=>"NP",'NRU'=>"NR",'NIU'=>"NU",'NZL'=>"NZ",'OMN'=>"OM",'PAN'=>"PA",'PER'=>"PE",'PYF'=>"PF",'PNG'=>"PG",'PHL'=>"PH",'PAK'=>"PK",'POL'=>"PL",'SPM'=>"PM",'PCN'=>"PN",'PRI'=>"PR",'PSE'=>"PS",'PRT'=>"PT",'PLW'=>"PW",'PRY'=>"PY",'QAT'=>"QA",'REU'=>"RE",'ROU'=>"RO",'RUS'=>"RU",'RWA'=>"RW",'SAU'=>"SA",'SLB'=>"SB",'SYC'=>"SC",'SDN'=>"SD",'SWE'=>"SE",'SGP'=>"SG",'SHN'=>"SH",'SVN'=>"SI",'SJM'=>"SJ",'SVK'=>"SK",'SLE'=>"SL",'SMR'=>"SM",'SEN'=>"SN",'SOM'=>"SO",'SUR'=>"SR",'STP'=>"ST",'SLV'=>"SV",'SYR'=>"SY",'SWZ'=>"SZ",'TCA'=>"TC",'TCD'=>"TD",'ATF'=>"TF",'TGO'=>"TG",'THA'=>"TH",'TJK'=>"TJ",'TKL'=>"TK",'TLS'=>"TL",'TKM'=>"TM",'TUN'=>"TN",'TON'=>"TO",'TUR'=>"TR",'TTO'=>"TT",'TUV'=>"TV",'TWN'=>"TW",'TZA'=>"TZ",'UKR'=>"UA",'UGA'=>"UG",'UMI'=>"UM",'USA'=>"US",'URY'=>"UY",'UZB'=>"UZ",'VAT'=>"VA",'VCT'=>"VC",'VEN'=>"VE",'VGB'=>"VG",'VIR'=>"VI",'VNM'=>"VN",'VUT'=>"VU",'WLF'=>"WF",'WSM'=>"WS",'YEM'=>"YE",'MYT'=>"YT",'ZAF'=>"ZA",'ZMB'=>"ZM",'ZWE'=>"ZW");
        // Iso standard 3 digits
        $iso3166c = array('20'=>"AD",'784'=>"AE",'4'=>"AF",'28'=>"AG",'660'=>"AI",'8'=>"AL",'51'=>"AM",'530'=>"AN",'24'=>"AO",'10'=>"AQ",'32'=>"AR",'16'=>"AS",'40'=>"AT",'36'=>"AU",'533'=>"AW",'248'=>"AX",'31'=>"AZ",'70'=>"BA",'52'=>"BB",'50'=>"BD",'56'=>"BE",'854'=>"BF",'100'=>"BG",'48'=>"BH",'108'=>"BI",'204'=>"BJ",'60'=>"BM",'96'=>"BN",'68'=>"BO",'76'=>"BR",'44'=>"BS",'64'=>"BT",'74'=>"BV",'72'=>"BW",'112'=>"BY",'84'=>"BZ",'124'=>"CA",'166'=>"CC",'180'=>"CD",'140'=>"CF",'178'=>"CG",'756'=>"CH",'384'=>"CI",'184'=>"CK",'152'=>"CL",'120'=>"CM",'156'=>"CN",'170'=>"CO",'188'=>"CR",'891'=>"CS",'192'=>"CU",'132'=>"CV",'162'=>"CX",'196'=>"CY",'203'=>"CZ",'276'=>"DE",'262'=>"DJ",'208'=>"DK",'212'=>"DM",'214'=>"DO",'12'=>"DZ",'218'=>"EC",'233'=>"EE",'818'=>"EG",'732'=>"EH",'232'=>"ER",'724'=>"ES",'231'=>"ET",'246'=>"FI",'242'=>"FJ",'238'=>"FK",'583'=>"FM",'234'=>"FO",'250'=>"FR",'266'=>"GA",'826'=>"GB",'308'=>"GD",'268'=>"GE",'254'=>"GF",'831'=>"GG",'288'=>"GH",'292'=>"GI",'304'=>"GL",'270'=>"GM",'324'=>"GN",'312'=>"GP",'226'=>"GQ",'300'=>"GR",'239'=>"GS",'320'=>"GT",'316'=>"GU",'624'=>"GW",'328'=>"GY",'344'=>"HK",'334'=>"HM",'340'=>"HN",'191'=>"HR",'332'=>"HT",'348'=>"HU",'360'=>"ID",'372'=>"IE",'376'=>"IL",'833'=>"IM",'356'=>"IN",'86'=>"IO",'368'=>"IQ",'364'=>"IR",'352'=>"IS",'380'=>"IT",'832'=>"JE",'388'=>"JM",'400'=>"JO",'392'=>"JP",'404'=>"KE",'417'=>"KG",'116'=>"KH",'296'=>"KI",'174'=>"KM",'659'=>"KN",'408'=>"KP",'410'=>"KR",'414'=>"KW",'136'=>"KY",'398'=>"KZ",'418'=>"LA",'422'=>"LB",'662'=>"LC",'438'=>"LI",'144'=>"LK",'430'=>"LR",'426'=>"LS",'440'=>"LT",'442'=>"LU",'428'=>"LV",'434'=>"LY",'504'=>"MA",'492'=>"MC",'498'=>"MD",'450'=>"MG",'584'=>"MH",'807'=>"MK",'466'=>"ML",'104'=>"MM",'496'=>"MN",'446'=>"MO",'580'=>"MP",'474'=>"MQ",'478'=>"MR",'500'=>"MS",'470'=>"MT",'480'=>"MU",'462'=>"MV",'454'=>"MW",'484'=>"MX",'458'=>"MY",'508'=>"MZ",'516'=>"NA",'540'=>"NC",'562'=>"NE",'574'=>"NF",'566'=>"NG",'558'=>"NI",'528'=>"NL",'578'=>"NO",'524'=>"NP",'520'=>"NR",'570'=>"NU",'554'=>"NZ",'512'=>"OM",'591'=>"PA",'604'=>"PE",'258'=>"PF",'598'=>"PG",'608'=>"PH",'586'=>"PK",'616'=>"PL",'666'=>"PM",'612'=>"PN",'630'=>"PR",'275'=>"PS",'620'=>"PT",'585'=>"PW",'600'=>"PY",'634'=>"QA",'638'=>"RE",'642'=>"RO",'643'=>"RU",'646'=>"RW",'682'=>"SA",'90'=>"SB",'690'=>"SC",'736'=>"SD",'752'=>"SE",'702'=>"SG",'654'=>"SH",'705'=>"SI",'744'=>"SJ",'703'=>"SK",'694'=>"SL",'674'=>"SM",'686'=>"SN",'706'=>"SO",'740'=>"SR",'678'=>"ST",'222'=>"SV",'760'=>"SY",'748'=>"SZ",'796'=>"TC",'148'=>"TD",'260'=>"TF",'768'=>"TG",'764'=>"TH",'762'=>"TJ",'772'=>"TK",'626'=>"TL",'795'=>"TM",'788'=>"TN",'776'=>"TO",'792'=>"TR",'780'=>"TT",'798'=>"TV",'158'=>"TW",'834'=>"TZ",'804'=>"UA",'800'=>"UG",'581'=>"UM",'840'=>"US",'858'=>"UY",'860'=>"UZ",'336'=>"VA",'670'=>"VC",'862'=>"VE",'92'=>"VG",'850'=>"VI",'704'=>"VN",'548'=>"VU",'876'=>"WF",'882'=>"WS",'887'=>"YE",'175'=>"YT",'710'=>"ZA",'894'=>"ZM",'716'=>"ZW");
        if(in_array($ref_pays, $iso3166a))   return $ref_pays;
        if(isset($iso3166b[$ref_pays]))      return $iso3166b[$ref_pays];
        if(isset($iso3166c[(int)$ref_pays])) return $iso3166c[(int)$ref_pays];
    }else{
        $ref_pays = strtoupper($ref_pays);
        // Texte complet
        $text = array('AALAND' => 'AX', 'AFGHANISTAN' => 'AF', 'ALBANIA' => 'AL', 'ALGERIA' => 'DZ', 'SAMOA' => 'AS', 'ANDORRA' => 'AD', 'ANGOLA' => 'AO', 'ANGUILLA' => 'AI', 'ANTARCTICA' => 'AQ', 'ANTIGUA' => 'AG', 'ARAB EMIRATES' => 'AE', 'ARGENTINA' => 'AR', 'ARMENIA' => 'AM', 'ARUBA' => 'AW', 'AUSTRALIA' => 'AU', 'AUSTRIA' => 'AT', 'AZERBAIJAN' => 'AZ', 'BAHAMAS' => 'BS', 'BAHRAIN' => 'BH', 'BANGLADESH' => 'BD', 'BARBADOS' => 'BB', 'BELARUS' => 'BY', 'BELGIUM' => 'BE', 'BELIZE' => 'BZ', 'BENIN' => 'BJ', 'BERMUDA' => 'BM', 'BHUTAN' => 'BT', 'BOLIVIA' => 'BO', 'BOSNIA' => 'BA', 'BOTSWANA' => 'BW', 'BOUVET' => 'BV', 'BRAZIL' => 'BR', 'BRITISH INDIAN' => 'IO', 'BRUNEI' => 'BN', 'BULGARIA' => 'BG', 'BURKINA' => 'BF', 'BURUNDI' => 'BI', 'CAMBODIA' => 'KH', 'CAMEROON' => 'CM', 'CANADA' => 'CA', 'CAPE VERDE' => 'CV', 'CAYMAN' => 'KY', 'CENTRAL AFRICAN' => 'CF', 'CHAD' => 'TD', 'CHILE' => 'CL', 'CHINA' => 'CN', 'CHRISTMAS' => 'CX', 'COCOS' => 'CC', 'COLOMBIA' => 'CO', 'COMOROS' => 'KM', 'CONGO ZAIRE' => 'CD', 'CONGO' => 'CG', 'COOK ISLANDS' => 'CK', 'COSTA RICA' => 'CR', 'COTE D IVOIRE' => 'CI', 'CROATIA' => 'HR', 'CUBA' => 'CU', 'CYPRUS' => 'CY', 'CZECH' => 'CZ', 'DENMARK' => 'DK', 'DJIBOUTI' => 'DJ', 'DOMINICA' => 'DM', 'DOMINICAN REPUBLIC' => 'DO', 'ECUADOR' => 'EC', 'EGYPT' => 'EG', 'EL SALVADOR' => 'SV', 'EQUATORIAL GUINEA' => 'GQ', 'ERITREA' => 'ER', 'ESTONIA' => 'EE', 'ETHIOPIA' => 'ET', 'FALKLAND ISLANDS (MALVINAS)' => 'FK', 'FAROE ISLANDS' => 'FO', 'FIJI' => 'FJ', 'FINLAND' => 'FI', 'FRANCE' => 'FR', 'FRENCH GUIANA' => 'GF', 'FRENCH POLYNESIA' => 'PF', 'FRENCH SOUTHERN TERRITORIES' => 'TF', 'GABON' => 'GA', 'GAMBIA' => 'GM', 'GEORGIA' => 'GE', 'GERMANY' => 'DE', 'GHANA' => 'GH', 'GIBRALTAR' => 'GI', 'GREECE' => 'GR', 'GREENLAND' => 'GL', 'GRENADA' => 'GD', 'GUADELOUPE' => 'GP', 'GUAM' => 'GU', 'GUATEMALA' => 'GT', 'GUERNSEY' => 'GG', 'GUINEA' => 'GN', 'GUINEA-BISSAU' => 'GW', 'GUYANA' => 'GY', 'HAITI' => 'HT', 'HEARD AND MC DONALD ISLANDS' => 'HM', 'HONDURAS' => 'HN', 'HONG KONG' => 'HK', 'HUNGARY' => 'HU', 'ICELAND' => 'IS', 'INDIA' => 'IN', 'INDONESIA' => 'ID', 'IRAN' => 'IR', 'IRAQ' => 'IQ', 'IRELAND' => 'IE', 'ISLE OF MAN' => 'IM', 'ISRAEL' => 'IL', 'ITALY' => 'IT', 'JAMAICA' => 'JM', 'JAPAN' => 'JP', 'JERSEY' => 'JE', 'JORDAN' => 'JO', 'KAZAKHSTAN' => 'KZ', 'KENYA' => 'KE', 'KIRIBATI' => 'KI', 'KOREA DEMOCRATIC' => 'KP', 'KOREA' => 'KR', 'KUWAIT' => 'KW', 'KYRGYZSTAN' => 'KG', 'LAO PEOPLE S DEMOCRATIC REPUBLIC' => 'LA', 'LATVIA' => 'LV', 'LEBANON' => 'LB', 'LESOTHO' => 'LS', 'LIBERIA' => 'LR', 'LIBYAN ARAB JAMAHIRIYA' => 'LY', 'LIECHTENSTEIN' => 'LI', 'LITHUANIA' => 'LT', 'LUXEMBOURG' => 'LU', 'MACAU' => 'MO', 'MACEDONIA' => 'MK', 'MADAGASCAR' => 'MG', 'MALAWI' => 'MW', 'MALAYSIA' => 'MY', 'MALDIVES' => 'MV', 'MALI' => 'ML', 'MALTA' => 'MT', 'MARSHALL ISLANDS' => 'MH', 'MARTINIQUE' => 'MQ', 'MAURITANIA' => 'MR', 'MAURITIUS' => 'MU', 'MAYOTTE' => 'YT', 'MEXICO' => 'MX', 'MICRONESIA' => 'FM', 'MOLDOVA' => 'MD', 'MONACO' => 'MC', 'MONGOLIA' => 'MN', 'MONTSERRAT' => 'MS', 'MOROCCO' => 'MA', 'MOZAMBIQUE' => 'MZ', 'MYANMAR' => 'MM', 'NAMIBIA' => 'NA', 'NAURU' => 'NR', 'NEPAL' => 'NP', 'NETHERLANDS' => 'NL', 'NETHERLANDS ANTILLES' => 'AN', 'NEW CALEDONIA' => 'NC', 'NEW ZEALAND' => 'NZ', 'NICARAGUA' => 'NI', 'NIGER' => 'NE', 'NIGERIA' => 'NG', 'NIUE' => 'NU', 'NORFOLK ISLAND' => 'NF', 'NORTHERN MARIANA ISLANDS' => 'MP', 'NORWAY' => 'NO', 'OMAN' => 'OM', 'PAKISTAN' => 'PK', 'PALAU' => 'PW', 'PALESTINIAN' => 'PS', 'PANAMA' => 'PA', 'PAPUA NEW GUINEA' => 'PG', 'PARAGUAY' => 'PY', 'PERU' => 'PE', 'PHILIPPINES' => 'PH', 'PITCAIRN' => 'PN', 'POLAND' => 'PL', 'PORTUGAL' => 'PT', 'PUERTO RICO' => 'PR', 'QATAR' => 'QA', 'REUNION' => 'RE', 'ROMANIA' => 'RO', 'RUSSIAN' => 'RU', 
                      'RWANDA' => 'RW', 'SAINT HELENA' => 'SH', 'SAINT KITTS AND NEVIS' => 'KN', 'SAINT LUCIA' => 'LC', 'SAINT PIERRE AND MIQUELON' => 'PM', 'SAINT VINCENT' => 'VC', 'SAMOA' => 'WS', 'SAN MARINO' => 'SM', 'SAO TOME AND PRINCIPE' => 'ST', 'SAUDI ARABIA' => 'SA', 'SENEGAL' => 'SN', 'SERBIA AND MONTENEGRO' => 'CS', 'SEYCHELLES' => 'SC', 'SIERRA LEONE' => 'SL', 'SINGAPORE' => 'SG', 'SLOVAKIA' => 'SK', 'SLOVENIA' => 'SI', 'SOLOMON ISLANDS' => 'SB', 'SOMALIA' => 'SO', 'SOUTH AFRICA' => 'ZA', 'SOUTH GEORGIA' => 'GS', 'SPAIN' => 'ES', 'SRI LANKA' => 'LK', 'SUDAN' => 'SD', 'SURINAME' => 'SR', 'SVALBARD AND JAN MAYEN ISLANDS' => 'SJ', 'SWAZILAND' => 'SZ', 'SWEDEN' => 'SE', 'SWITZERLAND' => 'CH', 'SYRIAN ARAB REPUBLIC' => 'SY', 'TAIWAN' => 'TW', 'TAJIKISTAN' => 'TJ', 'TANZANIA' => 'TZ', 'THAILAND' => 'TH', 'TIMOR-LESTE' => 'TL', 'TOGO' => 'TG', 'TOKELAU' => 'TK', 'TONGA' => 'TO', 'TRINIDAD AND TOBAGO' => 'TT', 'TUNISIA' => 'TN', 'TURKEY' => 'TR', 'TURKMENISTAN' => 'TM', 'TURKS AND CAICOS ISLANDS' => 'TC', 'TUVALU' => 'TV', 'UGANDA' => 'UG', 'UKRAINE' => 'UA', 'UNITED KINGDOM' => 'GB', 'UNITED STATES' => 'US', 'UNITED STATES MINOR OUTLYING ISLANDS' => 'UM', 'URUGUAY' => 'UY', 'UZBEKISTAN' => 'UZ', 'VANUATU' => 'VU', 'VATICAN' => 'VA', 'VENEZUELA' => 'VE', 'VIET NAM' => 'VN', 'VIRGIN ISLANDS (BRITISH)' => 'VG', 'VIRGIN ISLANDS' => 'VI', 'WALLIS AND FUTUNA ISLANDS' => 'WF', 'WESTERN SAHARA' => 'EH', 'YEMEN' => 'YE', 'ZAMBIA' => 'ZM', 'ZIMBABWE' => 'ZW', 
                      'SUISSE' => 'CH', 'FRANCIA' => 'FR', 'GRECE' => 'GC', 'MAROC' => 'MA', 'ANGLETERRE' => 'GB', 'ITALIE' => 'IT', 'BELGIQUE' => 'BE', 'BELGIUM' => 'BE',
                      'AFGHANISTAN' => 'AF', 'AFRIQUE DU SUD' => 'ZA', 'TERRITOIRE AUTONOME (FINLANDE) ALAND' => 'AX', 'ALBANIE' => 'AL', 'ALGERIE' => 'DZ', 'ALLEMAGNE' => 'DE', 'ANDORRE' => 'AD', 'ANGOLA' => 'AO', 'ANGUILLA' => 'AI', 'ANTARCTIQUE' => 'AQ', 'ANTIGUA-ET-BARBUDA' => 'AG', 'ANTILLES NEERLANDAISES' => 'AN', 'ARABIE SAOUDITE' => 'SA', 'ARGENTINE' => 'AR', 'ARMENIE' => 'AM', 'ARUBA' => 'AW', 'AUSTRALIE' => 'AU', 'AUTRICHE' => 'AT', 'AZERBAIDJAN' => 'AZ', 'BAHAMAS' => 'BS', 'BAHREIN' => 'BH', 'BANGLADESH' => 'BD', 'BARBADE' => 'BB', 'BIELORUSSIE' => 'BY', 'BELGIQUE' => 'BE', 'BELIZE' => 'BZ', 'BENIN ' => 'BJ', 'TERRITOIRE D OUTRE-MER AUTONOME (ROYAUME-UNI) BERMUDES' => 'BM', 'BHOUTAN' => 'BT', 'BOLIVIE' => 'BO', 'BOSNIE-HERZEGOVINE' => 'BA', 'BOTSWANA' => 'BW', 'ILE BOUVET' => 'BV', 'BRESIL' => 'BR', 'BRUNEI' => 'BN', 'BULGARIE' => 'BG', 'BURKINA FASO' => 'BF', 'BURUNDI ' => 'BI', 'TERRITOIRE AUTONOME (ROYAUME-UNI) ILES CAIMANES' => 'KY', 'CAMBODGE' => 'KH', 'CAMEROUN' => 'CM', 'CANADA' => 'CA', 
                      'CAP VERT' => 'CV', 'CENTRAFRIQUE' => 'CF', 'CHILI' => 'CL', 'CHINE ' => 'CN', 'ILE CHRISTMAS (AUSTRALIE) ILE CHRISTMAS' => 'CX', 'CHYPRE (PAYS) ' => 'CY', 'ILES COCOS (KEELING) ILES COCOS' => 'CC', 'COLOMBIE' => 'CO', 'COMORES' => 'KM', 'CONGO / (CONGO BRAZZAVILLE)' => 'CG', 'CONGO KINSHASA / (CONGO KINSHASA)' => 'CD', 'ILES COOK' => 'CK', 'COREE DU SUD' => 'KR', 'COREE DU NORD' => 'KP', 'COSTA RICA' => 'CR', 'COTE D IVOIRE' => 'CI', 'CROATIE' => 'HR', 'CUBA' => 'CU', 'DANEMARK' => 'DK', 'DJIBOUTI' => 'DJ', 'REPUBLIQUE DOMINICAINE' => 'DO', 'DOMINIQUE' => 'DM', 'EGYPTE' => 'EG', 'SALVADOR' => 'SV', 'EMIRATS ARABES UNIS' => 'AE', 'EQUATEUR' => 'EC', 'ERYTHREE ' => 'ER', 'ESPAGNE' => 'ES', 'ESTONIE' => 'EE', 'ETATS UNIS' => 'US', 'ETHIOPIE ' => 'ET', 'TERRITOIRE AUTONOME (ROYAUME UNI) ILES MALOUINES (FALKLAND) ' => 'FK', 'TERRITOIRE AUTONOME (DANEMARK) ILES FEROE' => 'FO', 'FIDJI' => 'FJ', 'FINLANDE ' => 'FI', '(PETIT DRAPEAU) FRANCE' => 'FR', 'GABON' => 'GA', 'GAMBIE' => 'GM', 
                      'GEORGIE' => 'GE', 'GEORGIE DU SUD ET LES ILES SANDWICH DU SUD' => 'GS', 'GHANA' => 'GH', 'GIBRALTAR' => 'GI', 'GRECE' => 'GR', 'GRENADE (PAYS)' => 'GD', 'GROENLAND' => 'GL', 'GUADELOUPE' => 'GP', 'GUAM' => 'GU', 'GUATEMALA' => 'GT', 'GUERNESEY' => 'GG', 'GUINEE' => 'GN', 'GUINEE BISSAU' => 'GW', 'GUINEE EQUATORIALE' => 'GQ', 'GUYANA ' => 'GY', 'GUYANE' => 'GF', 'HAITI ' => 'HT', 'AUSTRALIE (TERRITOIRE) ILE HEARD ET ILES MCDONALD' => 'HM', 'HONDURAS' => 'HN', 'HONG KONG' => 'HK', 'HONGRIE' => 'HU', 'ILE DE MAN' => 'IM', 'ILES MINEURES ELOIGNEES DES ETATS UNIS' => 'UM', 'ILES VIERGES BRITANNIQUES' => 'VG', 'ILES VIERGES AMERICAINES' => 'VI', 'INDE' => 'IN', 'INDONESIE' => 'ID', 'IRAN' => 'IR', 'IRAK' => 'IQ', 'IRLANDE (PAYS)' => 'IE', 'ISLANDE' => 'IS', 'ISRAEL' => 'IL', 'ITALIE' => 'IT', 'JAMAIQUE' => 'JM', 'JAPON' => 'JP', 'JERSEY' => 'JE', 'JORDANIE' => 'JO', 'KAZAKHSTAN' => 'KZ', 'KENYA' => 'KE', 'KIRGHIZISTAN' => 'KG', 'KIRIBATI' => 'KI', 'KOWEIT' => 'KW', 
                      'LAOS' => 'LA', 'LESOTHO' => 'LS', 'LETTONIE' => 'LV', 'LIBAN' => 'LB', 'LIBERIA' => 'LR', 'LIBYE' => 'LY', 'LIECHTENSTEIN' => 'LI', 'LITUANIE' => 'LT', 'LUXEMBOURG (PAYS)' => 'LU', 'MACAO' => 'MO', 'MACEDOINE (PAYS)' => 'MK', 'MADAGASCAR' => 'MG', 'MALAISIE' => 'MY', 'MALAWI' => 'MW', 'MALDIVES' => 'MV', 'MALI' => 'ML', 'MALTE ' => 'MT', 'TERRITOIRE (ETATS UNIS) ILES MARIANNES DU NORD' => 'MP', 'MAROC' => 'MA', 'MARSHALL (PAYS) ' => 'MH', 'DEPARTEMENT D OUTRE MER (FRANCE) MARTINIQUE' => 'MQ', 'MAURICE (PAYS)' => 'MU', 'MAURITANIE ' => 'MR', 'FRANCE MAYOTTE' => 'YT', 'MEXIQUE' => 'MX', 'MICRONESIE (PAYS)' => 'FM', 'MOLDAVIE' => 'MD', 'MONACO' => 'MC', 'MONGOLIE' => 'MN', 'MONTENEGRO' => 'ME', 'MONTSERRAT' => 'MS', 'MOZAMBIQUE' => 'MZ', 'BIRMANIE' => 'MM', 'NAMIBIE' => 'NA', 'NAURU' => 'NR', 'NEPAL' => 'NP', 'NICARAGUA' => 'NI', 'NIGER' => 'NE', 'NIGERIA' => 'NG', 'NIUE' => 'NU', 'NORFOLK' => 'NF', 'NORVEGE ' => 'NO', 'FRANCE NOUVELLE CALEDONIE' => 'NC', 'NOUVELLE ZELANDE' => 'NZ', 
                      'TERRITOIRE BRITANNIQUE DE L OCEAN INDIEN' => 'IO', 'OMAN' => 'OM', 'OUGANDA' => 'UG', 'OUZBEKISTAN' => 'UZ', 'PAKISTAN' => 'PK', 'PALAOS' => 'PW', 'PALESTINE' => 'PS', 'PANAMA' => 'PA', 'PAPOUASIE NOUVELLE GUINEE' => 'PG', 'PARAGUAY' => 'PY', 'PAYS BAS' => 'NL', 'PEROU' => 'PE', 'PHILIPPINES' => 'PH', 'PITCAIRN' => 'PN', 'POLOGNE' => 'PL', 'POLYNESIE FRANCAISE' => 'PF', 'PORTO RICO' => 'PR', 'PORTUGAL' => 'PT', 'QATAR ' => 'QA', 'FRANCE REUNION ' => 'RE', 'ROUMANIE' => 'RO', 'ROYAUME UNI' => 'GB', 'RUSSIE' => 'RU', 'RWANDA' => 'RW', 'SAHARA OCCIDENTAL' => 'EH', 'SAINT CHRISTOPHE ET NIEVES' => 'KN', 'SAINT MARIN ' => 'SM', 'FRANCE SAINT PIERRE ET MIQUELON' => 'PM', 'VATICAN / (SAINT SIEGE)' => 'VA', 'SAINT VINCENT ET LES GRENADINES ' => 'VC', 'SAINTE HELENE, ILE' => 'SH', 'SAINTE LUCIE' => 'LC', 'ILES SALOMON, ILES' => 'SB', 'SAMOA' => 'WS', 'SAMOA AMERICAINES' => 'AS', 'SAO TOME ET PRINCIPE' => 'ST', 'SENEGAL' => 'SN', 'SERBIE' => 'RS', 'SEYCHELLES' => 'SC', 'SIERRA LEONE' => 'SL', 
                      'SINGAPOUR' => 'SG', 'SLOVAQUIE' => 'SK', 'SLOVENIE' => 'SI', 'SOMALIE' => 'SO', 'SOUDAN' => 'SD', 'SRI LANKA' => 'LK', 'SUEDE' => 'SE', 'SUISSE' => 'CH', 'SURINAME' => 'SR', 'SVALBARD ET ILE JAN MAYEN' => 'SJ', 'SWAZILAND' => 'SZ', 'SYRIE' => 'SY', 'TADJIKISTAN' => 'TJ', 'TAIWAN / (REPUBLIQUE DE CHINE)' => 'TW', 'TANZANIE' => 'TZ', 'TCHAD' => 'TD', 'REPUBLIQUE TCHEQUE ' => 'CZ', 'TERRITOIRE D OUTRE MER DE LA REPUBLIQUE (FRANCE) TERRES AUSTRALES ET ANTARCTIQUES FRANCAISES' => 'TF', 'THAILANDE' => 'TH', 'TIMOR ORIENTAL' => 'TL', 'TOGO' => 'TG', 'TOKELAU' => 'TK', 'TONGA' => 'TO', 'TRINITE ET TOBAGO' => 'TT', 'TUNISIE' => 'TN', 'TURKMENISTAN' => 'TM', 'ILES TURQUES ET CAIQUES' => 'TC', 'TURQUIE' => 'TR', 'TUVALU' => 'TV', 'UKRAINE' => 'UA', 'URUGUAY' => 'UY', 'VANUATU' => 'VU', 'VENEZUELA' => 'VE', 'VIET NAM ' => 'VN', 'FRANCE WALLIS ET FUTUNA' => 'WF', 'YEMEN' => 'YE', 'ZAMBIE' => 'ZM', 'ZIMBABWE ' => 'ZW',
                      'BALEARES' => 'ES');
        foreach($text as $txt => $pay) if($ref_pays == $txt) return $pay;
    }
    return $default;
}

/* Fonction de recuperation du pays */
function fix_ref_pays($pays, $default = "FR") {
    if(trim($pays) == "") return $default;

    $pays = strtoupper($pays);
    // Texte complet
    $text = array('AALAND' => 'AX', 'AFGHANISTAN' => 'AF', 'ALBANIA' => 'AL', 'ALGERIA' => 'DZ', 'SAMOA' => 'AS', 'ANDORRA' => 'AD', 'ANGOLA' => 'AO', 'ANGUILLA' => 'AI', 'ANTARCTICA' => 'AQ', 'ANTIGUA' => 'AG', 'ARAB EMIRATES' => 'AE', 'ARGENTINA' => 'AR', 'ARMENIA' => 'AM', 'ARUBA' => 'AW', 'AUSTRALIA' => 'AU', 'AUSTRIA' => 'AT', 'AZERBAIJAN' => 'AZ', 'BAHAMAS' => 'BS', 'BAHRAIN' => 'BH', 'BANGLADESH' => 'BD', 'BARBADOS' => 'BB', 'BELARUS' => 'BY', 'BELGIUM' => 'BE', 'BELIZE' => 'BZ', 'BENIN' => 'BJ', 'BERMUDA' => 'BM', 'BHUTAN' => 'BT', 'BOLIVIA' => 'BO', 'BOSNIA' => 'BA', 'BOTSWANA' => 'BW', 'BOUVET' => 'BV', 'BRAZIL' => 'BR', 'BRITISH INDIAN' => 'IO', 'BRUNEI' => 'BN', 'BULGARIA' => 'BG', 'BURKINA' => 'BF', 'BURUNDI' => 'BI', 'CAMBODIA' => 'KH', 'CAMEROON' => 'CM', 'CANADA' => 'CA', 'CAPE VERDE' => 'CV', 'CAYMAN' => 'KY', 'CENTRAL AFRICAN' => 'CF', 'CHAD' => 'TD', 'CHILE' => 'CL', 'CHINA' => 'CN', 'CHRISTMAS' => 'CX', 'COCOS' => 'CC', 'COLOMBIA' => 'CO', 'COMOROS' => 'KM', 'CONGO ZAIRE' => 'CD', 'CONGO' => 'CG', 'COOK ISLANDS' => 'CK', 'COSTA RICA' => 'CR', 'COTE D IVOIRE' => 'CI', 'CROATIA' => 'HR', 'CUBA' => 'CU', 'CYPRUS' => 'CY', 'CZECH' => 'CZ', 'DENMARK' => 'DK', 'DJIBOUTI' => 'DJ', 'DOMINICA' => 'DM', 'DOMINICAN REPUBLIC' => 'DO', 'ECUADOR' => 'EC', 'EGYPT' => 'EG', 'EL SALVADOR' => 'SV', 'EQUATORIAL GUINEA' => 'GQ', 'ERITREA' => 'ER', 'ESTONIA' => 'EE', 'ETHIOPIA' => 'ET', 'FALKLAND ISLANDS (MALVINAS)' => 'FK', 'FAROE ISLANDS' => 'FO', 'FIJI' => 'FJ', 'FINLAND' => 'FI', 'FRANCE' => 'FR', 'FRENCH GUIANA' => 'GF', 'FRENCH POLYNESIA' => 'PF', 'FRENCH SOUTHERN TERRITORIES' => 'TF', 'GABON' => 'GA', 'GAMBIA' => 'GM', 'GEORGIA' => 'GE', 'GERMANY' => 'DE', 'GHANA' => 'GH', 'GIBRALTAR' => 'GI', 'GREECE' => 'GR', 'GREENLAND' => 'GL', 'GRENADA' => 'GD', 'GUADELOUPE' => 'GP', 'GUAM' => 'GU', 'GUATEMALA' => 'GT', 'GUERNSEY' => 'GG', 'GUINEA' => 'GN', 'GUINEA-BISSAU' => 'GW', 'GUYANA' => 'GY', 'HAITI' => 'HT', 'HEARD AND MC DONALD ISLANDS' => 'HM', 'HONDURAS' => 'HN', 'HONG KONG' => 'HK', 'HUNGARY' => 'HU', 'ICELAND' => 'IS', 'INDIA' => 'IN', 'INDONESIA' => 'ID', 'IRAN' => 'IR', 'IRAQ' => 'IQ', 'IRELAND' => 'IE', 'ISLE OF MAN' => 'IM', 'ISRAEL' => 'IL', 'ITALY' => 'IT', 'JAMAICA' => 'JM', 'JAPAN' => 'JP', 'JERSEY' => 'JE', 'JORDAN' => 'JO', 'KAZAKHSTAN' => 'KZ', 'KENYA' => 'KE', 'KIRIBATI' => 'KI', 'KOREA DEMOCRATIC' => 'KP', 'KOREA' => 'KR', 'KUWAIT' => 'KW', 'KYRGYZSTAN' => 'KG', 'LAO PEOPLE S DEMOCRATIC REPUBLIC' => 'LA', 'LATVIA' => 'LV', 'LEBANON' => 'LB', 'LESOTHO' => 'LS', 'LIBERIA' => 'LR', 'LIBYAN ARAB JAMAHIRIYA' => 'LY', 'LIECHTENSTEIN' => 'LI', 'LITHUANIA' => 'LT', 'LUXEMBOURG' => 'LU', 'MACAU' => 'MO', 'MACEDONIA' => 'MK', 'MADAGASCAR' => 'MG', 'MALAWI' => 'MW', 'MALAYSIA' => 'MY', 'MALDIVES' => 'MV', 'MALI' => 'ML', 'MALTA' => 'MT', 'MARSHALL ISLANDS' => 'MH', 'MARTINIQUE' => 'MQ', 'MAURITANIA' => 'MR', 'MAURITIUS' => 'MU', 'MAYOTTE' => 'YT', 'MEXICO' => 'MX', 'MICRONESIA' => 'FM', 'MOLDOVA' => 'MD', 'MONACO' => 'MC', 'MONGOLIA' => 'MN', 'MONTSERRAT' => 'MS', 'MOROCCO' => 'MA', 'MOZAMBIQUE' => 'MZ', 'MYANMAR' => 'MM', 'NAMIBIA' => 'NA', 'NAURU' => 'NR', 'NEPAL' => 'NP', 'NETHERLANDS' => 'NL', 'NETHERLANDS ANTILLES' => 'AN', 'NEW CALEDONIA' => 'NC', 'NEW ZEALAND' => 'NZ', 'NICARAGUA' => 'NI', 'NIGER' => 'NE', 'NIGERIA' => 'NG', 'NIUE' => 'NU', 'NORFOLK ISLAND' => 'NF', 'NORTHERN MARIANA ISLANDS' => 'MP', 'NORWAY' => 'NO', 'OMAN' => 'OM', 'PAKISTAN' => 'PK', 'PALAU' => 'PW', 'PALESTINIAN' => 'PS', 'PANAMA' => 'PA', 'PAPUA NEW GUINEA' => 'PG', 'PARAGUAY' => 'PY', 'PERU' => 'PE', 'PHILIPPINES' => 'PH', 'PITCAIRN' => 'PN', 'POLAND' => 'PL', 'PORTUGAL' => 'PT', 'PUERTO RICO' => 'PR', 'QATAR' => 'QA', 'REUNION' => 'RE', 'ROMANIA' => 'RO', 'RUSSIAN' => 'RU', 
                  'RWANDA' => 'RW', 'SAINT HELENA' => 'SH', 'SAINT KITTS AND NEVIS' => 'KN', 'SAINT LUCIA' => 'LC', 'SAINT PIERRE AND MIQUELON' => 'PM', 'SAINT VINCENT' => 'VC', 'SAMOA' => 'WS', 'SAN MARINO' => 'SM', 'SAO TOME AND PRINCIPE' => 'ST', 'SAUDI ARABIA' => 'SA', 'SENEGAL' => 'SN', 'SERBIA AND MONTENEGRO' => 'CS', 'SEYCHELLES' => 'SC', 'SIERRA LEONE' => 'SL', 'SINGAPORE' => 'SG', 'SLOVAKIA' => 'SK', 'SLOVENIA' => 'SI', 'SOLOMON ISLANDS' => 'SB', 'SOMALIA' => 'SO', 'SOUTH AFRICA' => 'ZA', 'SOUTH GEORGIA' => 'GS', 'SPAIN' => 'ES', 'SRI LANKA' => 'LK', 'SUDAN' => 'SD', 'SURINAME' => 'SR', 'SVALBARD AND JAN MAYEN ISLANDS' => 'SJ', 'SWAZILAND' => 'SZ', 'SWEDEN' => 'SE', 'SWITZERLAND' => 'CH', 'SYRIAN ARAB REPUBLIC' => 'SY', 'TAIWAN' => 'TW', 'TAJIKISTAN' => 'TJ', 'TANZANIA' => 'TZ', 'THAILAND' => 'TH', 'TIMOR-LESTE' => 'TL', 'TOGO' => 'TG', 'TOKELAU' => 'TK', 'TONGA' => 'TO', 'TRINIDAD AND TOBAGO' => 'TT', 'TUNISIA' => 'TN', 'TURKEY' => 'TR', 'TURKMENISTAN' => 'TM', 'TURKS AND CAICOS ISLANDS' => 'TC', 'TUVALU' => 'TV', 'UGANDA' => 'UG', 'UKRAINE' => 'UA', 'UNITED KINGDOM' => 'GB', 'UNITED STATES' => 'US', 'UNITED STATES MINOR OUTLYING ISLANDS' => 'UM', 'URUGUAY' => 'UY', 'UZBEKISTAN' => 'UZ', 'VANUATU' => 'VU', 'VATICAN' => 'VA', 'VENEZUELA' => 'VE', 'VIET NAM' => 'VN', 'VIRGIN ISLANDS (BRITISH)' => 'VG', 'VIRGIN ISLANDS' => 'VI', 'WALLIS AND FUTUNA ISLANDS' => 'WF', 'WESTERN SAHARA' => 'EH', 'YEMEN' => 'YE', 'ZAMBIA' => 'ZM', 'ZIMBABWE' => 'ZW', 
                  'SUISSE' => 'CH', 'FRANCIA' => 'FR', 'GRECE' => 'GC', 'MAROC' => 'MA', 'ANGLETERRE' => 'GB', 'ITALIE' => 'IT', 'BELGIQUE' => 'BE', 'BELGIUM' => 'BE',
                  'AFGHANISTAN' => 'AF', 'AFRIQUE DU SUD' => 'ZA', 'TERRITOIRE AUTONOME (FINLANDE) ALAND' => 'AX', 'ALBANIE' => 'AL', 'ALGERIE' => 'DZ', 'ALLEMAGNE' => 'DE', 'ANDORRE' => 'AD', 'ANGOLA' => 'AO', 'ANGUILLA' => 'AI', 'ANTARCTIQUE' => 'AQ', 'ANTIGUA-ET-BARBUDA' => 'AG', 'ANTILLES NEERLANDAISES' => 'AN', 'ARABIE SAOUDITE' => 'SA', 'ARGENTINE' => 'AR', 'ARMENIE' => 'AM', 'ARUBA' => 'AW', 'AUSTRALIE' => 'AU', 'AUTRICHE' => 'AT', 'AZERBAIDJAN' => 'AZ', 'BAHAMAS' => 'BS', 'BAHREIN' => 'BH', 'BANGLADESH' => 'BD', 'BARBADE' => 'BB', 'BIELORUSSIE' => 'BY', 'BELGIQUE' => 'BE', 'BELIZE' => 'BZ', 'BENIN ' => 'BJ', 'TERRITOIRE D OUTRE-MER AUTONOME (ROYAUME-UNI) BERMUDES' => 'BM', 'BHOUTAN' => 'BT', 'BOLIVIE' => 'BO', 'BOSNIE-HERZEGOVINE' => 'BA', 'BOTSWANA' => 'BW', 'ILE BOUVET' => 'BV', 'BRESIL' => 'BR', 'BRUNEI' => 'BN', 'BULGARIE' => 'BG', 'BURKINA FASO' => 'BF', 'BURUNDI ' => 'BI', 'TERRITOIRE AUTONOME (ROYAUME-UNI) ILES CAIMANES' => 'KY', 'CAMBODGE' => 'KH', 'CAMEROUN' => 'CM', 'CANADA' => 'CA', 
                  'CAP VERT' => 'CV', 'CENTRAFRIQUE' => 'CF', 'CHILI' => 'CL', 'CHINE ' => 'CN', 'ILE CHRISTMAS (AUSTRALIE) ILE CHRISTMAS' => 'CX', 'CHYPRE (PAYS) ' => 'CY', 'ILES COCOS (KEELING) ILES COCOS' => 'CC', 'COLOMBIE' => 'CO', 'COMORES' => 'KM', 'CONGO / (CONGO BRAZZAVILLE)' => 'CG', 'CONGO KINSHASA / (CONGO KINSHASA)' => 'CD', 'ILES COOK' => 'CK', 'COREE DU SUD' => 'KR', 'COREE DU NORD' => 'KP', 'COSTA RICA' => 'CR', 'COTE D IVOIRE' => 'CI', 'CROATIE' => 'HR', 'CUBA' => 'CU', 'DANEMARK' => 'DK', 'DJIBOUTI' => 'DJ', 'REPUBLIQUE DOMINICAINE' => 'DO', 'DOMINIQUE' => 'DM', 'EGYPTE' => 'EG', 'SALVADOR' => 'SV', 'EMIRATS ARABES UNIS' => 'AE', 'EQUATEUR' => 'EC', 'ERYTHREE ' => 'ER', 'ESPAGNE' => 'ES', 'ESTONIE' => 'EE', 'ETATS UNIS' => 'US', 'ETHIOPIE ' => 'ET', 'TERRITOIRE AUTONOME (ROYAUME UNI) ILES MALOUINES (FALKLAND) ' => 'FK', 'TERRITOIRE AUTONOME (DANEMARK) ILES FEROE' => 'FO', 'FIDJI' => 'FJ', 'FINLANDE ' => 'FI', '(PETIT DRAPEAU) FRANCE' => 'FR', 'GABON' => 'GA', 'GAMBIE' => 'GM', 
                  'GEORGIE' => 'GE', 'GEORGIE DU SUD ET LES ILES SANDWICH DU SUD' => 'GS', 'GHANA' => 'GH', 'GIBRALTAR' => 'GI', 'GRECE' => 'GR', 'GRENADE (PAYS)' => 'GD', 'GROENLAND' => 'GL', 'GUADELOUPE' => 'GP', 'GUAM' => 'GU', 'GUATEMALA' => 'GT', 'GUERNESEY' => 'GG', 'GUINEE' => 'GN', 'GUINEE BISSAU' => 'GW', 'GUINEE EQUATORIALE' => 'GQ', 'GUYANA ' => 'GY', 'GUYANE' => 'GF', 'HAITI ' => 'HT', 'AUSTRALIE (TERRITOIRE) ILE HEARD ET ILES MCDONALD' => 'HM', 'HONDURAS' => 'HN', 'HONG KONG' => 'HK', 'HONGRIE' => 'HU', 'ILE DE MAN' => 'IM', 'ILES MINEURES ELOIGNEES DES ETATS UNIS' => 'UM', 'ILES VIERGES BRITANNIQUES' => 'VG', 'ILES VIERGES AMERICAINES' => 'VI', 'INDE' => 'IN', 'INDONESIE' => 'ID', 'IRAN' => 'IR', 'IRAK' => 'IQ', 'IRLANDE (PAYS)' => 'IE', 'ISLANDE' => 'IS', 'ISRAEL' => 'IL', 'ITALIE' => 'IT', 'JAMAIQUE' => 'JM', 'JAPON' => 'JP', 'JERSEY' => 'JE', 'JORDANIE' => 'JO', 'KAZAKHSTAN' => 'KZ', 'KENYA' => 'KE', 'KIRGHIZISTAN' => 'KG', 'KIRIBATI' => 'KI', 'KOWEIT' => 'KW', 
                  'LAOS' => 'LA', 'LESOTHO' => 'LS', 'LETTONIE' => 'LV', 'LIBAN' => 'LB', 'LIBERIA' => 'LR', 'LIBYE' => 'LY', 'LIECHTENSTEIN' => 'LI', 'LITUANIE' => 'LT', 'LUXEMBOURG (PAYS)' => 'LU', 'MACAO' => 'MO', 'MACEDOINE (PAYS)' => 'MK', 'MADAGASCAR' => 'MG', 'MALAISIE' => 'MY', 'MALAWI' => 'MW', 'MALDIVES' => 'MV', 'MALI' => 'ML', 'MALTE ' => 'MT', 'TERRITOIRE (ETATS UNIS) ILES MARIANNES DU NORD' => 'MP', 'MAROC' => 'MA', 'MARSHALL (PAYS) ' => 'MH', 'DEPARTEMENT D OUTRE MER (FRANCE) MARTINIQUE' => 'MQ', 'MAURICE (PAYS)' => 'MU', 'MAURITANIE ' => 'MR', 'FRANCE MAYOTTE' => 'YT', 'MEXIQUE' => 'MX', 'MICRONESIE (PAYS)' => 'FM', 'MOLDAVIE' => 'MD', 'MONACO' => 'MC', 'MONGOLIE' => 'MN', 'MONTENEGRO' => 'ME', 'MONTSERRAT' => 'MS', 'MOZAMBIQUE' => 'MZ', 'BIRMANIE' => 'MM', 'NAMIBIE' => 'NA', 'NAURU' => 'NR', 'NEPAL' => 'NP', 'NICARAGUA' => 'NI', 'NIGER' => 'NE', 'NIGERIA' => 'NG', 'NIUE' => 'NU', 'NORFOLK' => 'NF', 'NORVEGE ' => 'NO', 'FRANCE NOUVELLE CALEDONIE' => 'NC', 'NOUVELLE ZELANDE' => 'NZ', 
                  'TERRITOIRE BRITANNIQUE DE L OCEAN INDIEN' => 'IO', 'OMAN' => 'OM', 'OUGANDA' => 'UG', 'OUZBEKISTAN' => 'UZ', 'PAKISTAN' => 'PK', 'PALAOS' => 'PW', 'PALESTINE' => 'PS', 'PANAMA' => 'PA', 'PAPOUASIE NOUVELLE GUINEE' => 'PG', 'PARAGUAY' => 'PY', 'PAYS BAS' => 'NL', 'PEROU' => 'PE', 'PHILIPPINES' => 'PH', 'PITCAIRN' => 'PN', 'POLOGNE' => 'PL', 'POLYNESIE FRANCAISE' => 'PF', 'PORTO RICO' => 'PR', 'PORTUGAL' => 'PT', 'QATAR ' => 'QA', 'FRANCE REUNION ' => 'RE', 'ROUMANIE' => 'RO', 'ROYAUME UNI' => 'GB', 'RUSSIE' => 'RU', 'RWANDA' => 'RW', 'SAHARA OCCIDENTAL' => 'EH', 'SAINT CHRISTOPHE ET NIEVES' => 'KN', 'SAINT MARIN ' => 'SM', 'FRANCE SAINT PIERRE ET MIQUELON' => 'PM', 'VATICAN / (SAINT SIEGE)' => 'VA', 'SAINT VINCENT ET LES GRENADINES ' => 'VC', 'SAINTE HELENE, ILE' => 'SH', 'SAINTE LUCIE' => 'LC', 'ILES SALOMON, ILES' => 'SB', 'SAMOA' => 'WS', 'SAMOA AMERICAINES' => 'AS', 'SAO TOME ET PRINCIPE' => 'ST', 'SENEGAL' => 'SN', 'SERBIE' => 'RS', 'SEYCHELLES' => 'SC', 'SIERRA LEONE' => 'SL', 
                  'SINGAPOUR' => 'SG', 'SLOVAQUIE' => 'SK', 'SLOVENIE' => 'SI', 'SOMALIE' => 'SO', 'SOUDAN' => 'SD', 'SRI LANKA' => 'LK', 'SUEDE' => 'SE', 'SUISSE' => 'CH', 'SURINAME' => 'SR', 'SVALBARD ET ILE JAN MAYEN' => 'SJ', 'SWAZILAND' => 'SZ', 'SYRIE' => 'SY', 'TADJIKISTAN' => 'TJ', 'TAIWAN / (REPUBLIQUE DE CHINE)' => 'TW', 'TANZANIE' => 'TZ', 'TCHAD' => 'TD', 'REPUBLIQUE TCHEQUE ' => 'CZ', 'TERRITOIRE D OUTRE MER DE LA REPUBLIQUE (FRANCE) TERRES AUSTRALES ET ANTARCTIQUES FRANCAISES' => 'TF', 'THAILANDE' => 'TH', 'TIMOR ORIENTAL' => 'TL', 'TOGO' => 'TG', 'TOKELAU' => 'TK', 'TONGA' => 'TO', 'TRINITE ET TOBAGO' => 'TT', 'TUNISIE' => 'TN', 'TURKMENISTAN' => 'TM', 'ILES TURQUES ET CAIQUES' => 'TC', 'TURQUIE' => 'TR', 'TUVALU' => 'TV', 'UKRAINE' => 'UA', 'URUGUAY' => 'UY', 'VANUATU' => 'VU', 'VENEZUELA' => 'VE', 'VIET NAM ' => 'VN', 'FRANCE WALLIS ET FUTUNA' => 'WF', 'YEMEN' => 'YE', 'ZAMBIE' => 'ZM', 'ZIMBABWE ' => 'ZW',
                  'BALEARES' => 'ES');
    foreach($text as $pay => $ref_pay) if($pay == $pays) return $text[$pay];
    return $default;
}
function paysFromIso($iso){
	$pays = array('AX' => 'TERRITOIRE AUTONOME (FINLANDE) ALAND','AF' => 'AFGHANISTAN','AL' => 'ALBANIE','DZ' => 'ALGERIE','WS' => 'SAMOA','AD' => 'ANDORRE','AO' => 'ANGOLA','AI' => 'ANGUILLA','AQ' => 'ANTARCTIQUE','AG' => 'ANTIGUA-ET-BARBUDA','AE' => 'EMIRATS ARABES UNIS','AR' => 'ARGENTINE','AM' => 'ARMENIE','AW' => 'ARUBA','AU' => 'AUSTRALIE','AT' => 'AUTRICHE','AZ' => 'AZERBAIDJAN','BS' => 'BAHAMAS','BH' => 'BAHREIN','BD' => 'BANGLADESH','BB' => 'BARBADE','BY' => 'BIELORUSSIE','BE' => 'BELGIQUE','BZ' => 'BELIZE','BJ' => 'BENIN ','BM' => 'TERRITOIRE D OUTRE-MER AUTONOME (ROYAUME-UNI) BERMUDES','BT' => 'BHOUTAN','BO' => 'BOLIVIE','BA' => 'BOSNIE-HERZEGOVINE','BW' => 'BOTSWANA','BV' => 'ILE BOUVET','BR' => 'BRESIL','IO' => 'TERRITOIRE BRITANNIQUE DE L OCEAN INDIEN','BN' => 'BRUNEI','BG' => 'BULGARIE','BF' => 'BURKINA FASO','BI' => 'BURUNDI ','KH' => 'CAMBODGE','CM' => 'CAMEROUN','CA' => 'CANADA','CV' => 'CAP VERT','KY' => 'TERRITOIRE AUTONOME (ROYAUME-UNI) ILES CAIMANES','CF' => 'CENTRAFRIQUE','TD' => 'TCHAD','CL' => 'CHILI','CN' => 'CHINE ','CX' => 'ILE CHRISTMAS (AUSTRALIE) ILE CHRISTMAS','CC' => 'ILES COCOS (KEELING) ILES COCOS','CO' => 'COLOMBIE','KM' => 'COMORES','CD' => 'CONGO KINSHASA / (CONGO KINSHASA)','CG' => 'CONGO / (CONGO BRAZZAVILLE)','CK' => 'ILES COOK','CR' => 'COSTA RICA','CI' => 'COTE D IVOIRE','HR' => 'CROATIE','CU' => 'CUBA','CY' => 'CHYPRE (PAYS) ','CZ' => 'REPUBLIQUE TCHEQUE ','DK' => 'DANEMARK','DJ' => 'DJIBOUTI','DM' => 'DOMINIQUE','DO' => 'REPUBLIQUE DOMINICAINE','EC' => 'EQUATEUR','EG' => 'EGYPTE','SV' => 'SALVADOR','GQ' => 'GUINEE EQUATORIALE','ER' => 'ERYTHREE ','EE' => 'ESTONIE','ET' => 'ETHIOPIE ','FK' => 'TERRITOIRE AUTONOME (ROYAUME UNI) ILES MALOUINES (FALKLAND) ','FO' => 'TERRITOIRE AUTONOME (DANEMARK) ILES FEROE','FJ' => 'FIDJI','FI' => 'FINLANDE ','FR' => '(PETIT DRAPEAU) FRANCE','GF' => 'GUYANE','PF' => 'POLYNESIE FRANCAISE','TF' => 'TERRITOIRE D OUTRE MER DE LA REPUBLIQUE (FRANCE) TERRES AUSTRALES ET ANTARCTIQUES FRANCAISES','GA' => 'GABON','GM' => 'GAMBIE','GE' => 'GEORGIE','DE' => 'ALLEMAGNE','GH' => 'GHANA','GI' => 'GIBRALTAR','GR' => 'GRECE','GL' => 'GROENLAND','GD' => 'GRENADE (PAYS)','GP' => 'GUADELOUPE','GU' => 'GUAM','GT' => 'GUATEMALA','GG' => 'GUERNESEY','GN' => 'GUINEE','GW' => 'GUINEE BISSAU','GY' => 'GUYANA ','HT' => 'HAITI ','HM' => 'AUSTRALIE (TERRITOIRE) ILE HEARD ET ILES MCDONALD','HN' => 'HONDURAS','HK' => 'HONG KONG','HU' => 'HONGRIE','IS' => 'ISLANDE','IN' => 'INDE','ID' => 'INDONESIE','IR' => 'IRAN','IQ' => 'IRAK','IE' => 'IRLANDE (PAYS)','IM' => 'ILE DE MAN','IL' => 'ISRAEL','IT' => 'ITALIE','JM' => 'JAMAIQUE','JP' => 'JAPON','JE' => 'JERSEY','JO' => 'JORDANIE','KZ' => 'KAZAKHSTAN','KE' => 'KENYA','KI' => 'KIRIBATI','KP' => 'COREE DU NORD','KR' => 'COREE DU SUD','KW' => 'KOWEIT','KG' => 'KIRGHIZISTAN','LA' => 'LAOS','LV' => 'LETTONIE','LB' => 'LIBAN','LS' => 'LESOTHO','LR' => 'LIBERIA','LY' => 'LIBYE','LI' => 'LIECHTENSTEIN','LT' => 'LITUANIE','LU' => 'LUXEMBOURG (PAYS)','MO' => 'MACAO','MK' => 'MACEDOINE (PAYS)','MG' => 'MADAGASCAR','MW' => 'MALAWI','MY' => 'MALAISIE','MV' => 'MALDIVES','ML' => 'MALI','MT' => 'MALTE ','MH' => 'MARSHALL (PAYS) ','MQ' => 'DEPARTEMENT D OUTRE MER (FRANCE) MARTINIQUE','MR' => 'MAURITANIE ','MU' => 'MAURICE (PAYS)','YT' => 'FRANCE MAYOTTE','MX' => 'MEXIQUE','FM' => 'MICRONESIE (PAYS)','MD' => 'MOLDAVIE','MC' => 'MONACO','MN' => 'MONGOLIE','MS' => 'MONTSERRAT','MA' => 'MAROC','MZ' => 'MOZAMBIQUE','MM' => 'BIRMANIE','NA' => 'NAMIBIE','NR' => 'NAURU','NP' => 'NEPAL','NL' => 'PAYS BAS','AN' => 'ANTILLES NEERLANDAISES','NC' => 'FRANCE NOUVELLE CALEDONIE','NZ' => 'NOUVELLE ZELANDE','NI' => 'NICARAGUA','NE' => 'NIGER','NG' => 'NIGERIA','NU' => 'NIUE','NF' => 'NORFOLK','MP' => 'TERRITOIRE (ETATS UNIS) ILES MARIANNES DU NORD','NO' => 'NORVEGE ','OM' => 'OMAN','PK' => 'PAKISTAN','PW' => 'PALAOS','PS' => 'PALESTINE','PA' => 'PANAMA','PG' => 'PAPOUASIE NOUVELLE GUINEE','PY' => 'PARAGUAY','PE' => 'PEROU','PH' => 'PHILIPPINES','PN' => 'PITCAIRN','PL' => 'POLOGNE','PT' => 'PORTUGAL','PR' => 'PORTO RICO','QA' => 'QATAR ','RE' => 'FRANCE REUNION ','RO' => 'ROUMANIE','RU' => 'RUSSIE','RW' => 'RWANDA','SH' => 'SAINTE HELENE, ILE','KN' => 'SAINT CHRISTOPHE ET NIEVES','LC' => 'SAINTE LUCIE','PM' => 'FRANCE SAINT PIERRE ET MIQUELON','VC' => 'SAINT VINCENT ET LES GRENADINES ','SM' => 'SAINT MARIN ','ST' => 'SAO TOME ET PRINCIPE','SA' => 'ARABIE SAOUDITE','SN' => 'SENEGAL','CS' => 'SERBIA AND MONTENEGRO','SC' => 'SEYCHELLES','SL' => 'SIERRA LEONE','SG' => 'SINGAPOUR','SK' => 'SLOVAQUIE','SI' => 'SLOVENIE','SB' => 'ILES SALOMON, ILES','SO' => 'SOMALIE','ZA' => 'AFRIQUE DU SUD','GS' => 'GEORGIE DU SUD ET LES ILES SANDWICH DU SUD','ES' => 'BALEARES','LK' => 'SRI LANKA','SD' => 'SOUDAN','SR' => 'SURINAME','SJ' => 'SVALBARD ET ILE JAN MAYEN','SZ' => 'SWAZILAND','SE' => 'SUEDE','CH' => 'SUISSE','SY' => 'SYRIE','TW' => 'TAIWAN / (REPUBLIQUE DE CHINE)','TJ' => 'TADJIKISTAN','TZ' => 'TANZANIE','TH' => 'THAILANDE','TL' => 'TIMOR ORIENTAL','TG' => 'TOGO','TK' => 'TOKELAU','TO' => 'TONGA','TT' => 'TRINITE ET TOBAGO','TN' => 'TUNISIE','TR' => 'TURQUIE','TM' => 'TURKMENISTAN','TC' => 'ILES TURQUES ET CAIQUES','TV' => 'TUVALU','UG' => 'OUGANDA','UA' => 'UKRAINE','GB' => 'ROYAUME UNI','US' => 'ETATS UNIS','UM' => 'ILES MINEURES ELOIGNEES DES ETATS UNIS','UY' => 'URUGUAY','UZ' => 'OUZBEKISTAN','VU' => 'VANUATU','VA' => 'VATICAN / (SAINT SIEGE)','VE' => 'VENEZUELA','VN' => 'VIET NAM ','VG' => 'ILES VIERGES BRITANNIQUES','VI' => 'ILES VIERGES AMERICAINES','WF' => 'FRANCE WALLIS ET FUTUNA','EH' => 'SAHARA OCCIDENTAL','YE' => 'YEMEN','ZM' => 'ZAMBIE','ZW' => 'ZIMBABWE ','ME' => 'MONTENEGRO','AS' => 'SAMOA AMERICAINES','RS' => 'SERBIE');
	return $pays[$iso];
}
function fix_date($date){
	return date('Y-m-d',strtotime($date));
}
function result_rets($retsResult,$key='',$standardNames=false){
	global $options;
	if($result = simplexml_load_string($retsResult)){
		if(!isset($result->DELIMITER)){
			if(isset($result->{'RETS-STATUS'})){
				$fault = $result->{'RETS-STATUS'}->attributes();
				logMsg("Erreur Request :".$fault['ReplyText'],2,-1);
				return array();
			}
			else {
				
				$fault = $result->attributes();
				logMsg("Erreur Request :".$fault['ReplyText'],2,-1);
				return array();
			}
		}
		$columns = explode("\t",$result->COLUMNS);
		if(count($result->DATA)>0){
			foreach($result->DATA as $data)  {
				$tmp = explode("\t",$data);
				$nb = count($tmp);
				$returnTmp = array();
				for($i = 1; $i<$nb-1;$i++){
					if($standardNames){
						$returnTmp[$options['FIELDS'][$columns[$i]]]= $tmp[$i];
						if($options['FIELDS'][$columns[$i]] == $key) $code = $i;
					}
					else {
						$returnTmp[$columns[$i]]= $tmp[$i];
						if($columns[$i] == $key) $code = $i;
					}		
				}
				if($key != '' && $code != '' && !empty($tmp[$code]))
					$return[$tmp[$code]] = $returnTmp;
				else
					$return[] = $returnTmp;
			}
			return $return;
		}
		else return 0;
	}
	else return false;
}
function synchronise_servers($file,$dirname,$servers){
	if(is_file($file)){
		foreach($servers as $server){
			if(preg_match('#\d{2,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}#',$server)){
				exec("/usr/bin/sudo /usr/bin/scp ".$file." root@".$server.":".$dirname,$return);
				//print_r($return);
			}
		}		
	}
}
function retsConnect($debugOrHost=false,$ua=''){
	global $options;
	logMsg("CONNECTING => ".date('H:i:s'));
	$options['RETS'] = new phRETS();
	$options['RETS']->AddHeader('Accept', '*/*');
	if($debugOrHost === true)
		$options['RETS']->SetParam("debug_mode", true);
	elseif(is_array($debugOrHost) && isset($debugOrHost['HOST'])){
		$options['HOST'] = $debugOrHost['HOST'];
		$options['LOGIN'] = $debugOrHost['LOGIN'];
		$options['PASSWORD'] = $debugOrHost['PASSWORD'];
		$options['RETS_VERSION'] = $debugOrHost['RETS_VERSION'];
		$options['USER_AGENT'] = $debugOrHost['USER_AGENT'];		
	}
	$options['RETS']->AddHeader('RETS-Version', $options['RETS_VERSION']);
	$options['RETS']->AddHeader('User-Agent', ( $options['USER_AGENT'] != '' ? $options['USER_AGENT'] : 'RETSConnector/1.0'));
	if($ua){
		$options['RETS']->AddHeader('User-Agent', $options['USER_AGENT']);
		$ua = ($options['AGENT_PASSWD'] != '' ? $options['AGENT_PASSWD'] : $options['PASSWORD']);
	}
	if(!$connect = $options['RETS']->Connect( $options['HOST'], $options['LOGIN'], $options['PASSWORD'],$ua)){
		logMsg("Connect Failed :".$options['HOST'],1,-1);
		return false;
	}
	logMsg("Connect OK :".$options['HOST'],1,1);
	return true;
}
function logMsg($msg,$log = 0,$status=0,$debut=NULL){
	global $options;
	$path = empty($options['WORKPATH']) ?  PATH_CACHE_151:$options['WORKPATH'];
	if(!is_dir($path.$options['SCRIPT_NAME']))
		mkdir($path.$options['SCRIPT_NAME']);
    $filename = isset($options['FILENAME']) ? $options['FILENAME'] : 'logfile.log';
	if(!is_file($path.$options['SCRIPT_NAME'].'/'.$filename)){
			touch($path.$options['SCRIPT_NAME'].'/'.$filename); 
			chown($path.$options['SCRIPT_NAME'].'/'.$filename,'www-data');
	}
	if($debut != NULL){
		$msg .= " en (".format_time( time()- $debut ).")";
	}
    
	if(empty($options['HANDLE'][$filename]))
		$options['HANDLE'][$filename] = fopen($path.$options['SCRIPT_NAME'].'/'.$filename,'w');
	$msgLog		=	"(".$options['MYPID'].")".$msg;
	$msgFile	=	"(".date('H:i:s')." - ".$options['MYPID'].")".$msg;
	if($status == 1){
		$msgLog = "<font color='green'>".$msg."</font>";
		$msgFile = "OK : ========     ".$msg."      ==========";
	}
	elseif($status == -1){
		$msgLog = "<font color='red'>".$msg."</font>";
		$msgFile = "ERROR : ------------      ".$msg."      ------------";
	}		
	if(!$options['TEST'] && $log != 3 && $log > 0 )
		import_log($msgLog,$options['SCRIPT_NAME']);
	elseif($options['TEST'] && $log == 2) echo $msgLog."<br>";
	if($options['LOG_IN_FILE'] && $log != 3){
		fwrite($options['HANDLE'][$filename],"\n".$msgFile."\n");	
	}
	elseif($options['LOG_IN_FILE'] && $log == 3 && $options['DEBUG_FULL']){
		fwrite($options['HANDLE'][$filename],"\n".$msgFile."\n");
	}
}
function importRetsImages($ref,$mls='',$count=69,$dateModif=false,$class =''){
	global $options;
	if($ref == ''){
		logMsg("******(".$options['MYPID'].") ".($updated ? "[ UPDATED ] " : '' )." REF  1 VIDE : ".$mls."**********");
		return array();
	}
	
	if($mls == '') $mls = $ref;
	if($options['IMG_FROM_CACHE']){
		if(empty($count)) $count = 69;
		if(file_exists($options['PATH_IMG'].$ref.'-1.jpg')){
			$imgCount=0;
			$lancement = time();
			if($dateModif !== false){
				$diff  = (time() - strtotime($dateModif));
				if(floor($diff/60/60/24) == 0){
					return getRetsImages($ref,$mls,false,true);
				}				
			}elseif($options['FREQUENCE']){
				return getRetsImages($ref,$mls,false,false,$class);
			}
			for($poids=1; $poids<=$count;$poids++){
				$url = $options['PATH_IMG'].$ref."-".$poids.".jpg";
				if(file_exists($url)){
					$data = file_get_contents($url);
					$image['POIDS'] = $poids;
					$image['URL_IMAGE'] = $url;
					$image['REF_PORTAIL'] = $ref;
					$options['IMGS'][$url]	=	1;
					$image['MD5_IMAGE'] = md5($ref.$data);
					$images[] = $image;
					++$imgCount;
					$image = array();
				}
				else $poids=70;
			}
			if($imgCount == 0){				
				return getRetsImages($ref,$mls,false,false,$class);
			}
			logMsg("******(".$options['MYPID'].") [CACHE] GET IMAGE SUCESS DE ".$ref."==>".$imgCount." en (".format_time( time()- $lancement ).")**********");
			return $images;
		}
	}
	return getRetsImages($ref,$mls,false,false,$class);
}
function getimgsArchived($dir){
	$imgs = glob($dir.'*.jpg');
	foreach($imgs as $img){
		$return[$img] = 1;
	}
	return $return;
}
function getArchivedFile($dir){
	return glob($dir.'*.*');	
}
function nettoyageArchive(){
	global $options;
	if(!$options['NEED_IMAGE'] || !$options['NEED_IMAGES'] || !$options['IMPORT_IMAGE'] || !$options['IMPORT_IMAGES']){
		logMsg("______________ IMAGES DESACTIVEE (".date('Y-m-d H:i:s').") ____________");
		return false;
	}
	logMsg("______________ DEBUT NETTOYAGE ARCHIVE (".date('Y-m-d H:i:s').") ____________");
	$debut = time();
	$list = glob(PATH_FTP_ARCHIVES.$options['SCRIPT_NAME'].'/*.jpg');
	if(count($list) == 0){
		logMsg(PATH_FTP_ARCHIVES.$options['SCRIPT_NAME']." AUCUNE IMAGE *******");
		return;
	}
	foreach($list as $listTmp){
		if($options['IMGS'][$listTmp] === 1){
			//logMsg("TOUR EXISTE (".basename($listTmp).") *******");
		}
		else {
			$delete++;
			exec('rm -f'.$listTmp);
			logMsg("--------------------".$listTmp." EXISTE PAS TO DELETE");
		}
	}
	/*foreach($list as $listTmp){
		preg_match("#(.*)-?\d{1,2}.jpg#",basename($listTmp),$nom);
		print_p($nom);
		print_p($options['IMGS']);
		die();
		$names[$nom[1]] = 1;
	}
	foreach($names as $nom=>$v){
		if($options['IMGS'][$nom] === 1){
			logMsg("TOUR EXISTE (".$nom.") *******");
		}
		else {
			$delete++;
			exec('rm '.$img);
			logMsg("--------------------".$nom." EXISTE PAS TO DELETE");
		}
	}*/
	logMsg("______________ FIN NETTOYAGE ARCHIVE (".(int)$delete." images supprim√©)(".date('Y-m-d H:i:s').") en ".format_time( time()- $debut )." ____________");
}
function usRefEtat($etat){
	$etats = array('alberta'=>'AB','alaska'=>'AK','alabama'=>'AL','arkansas'=>'AR','arizona'=>'AZ','british columbia'=>'BC','california'=>'CA','colorado'=>'CO','connecticut'=>'CT','district of columbia'=>'DC','delaware'=>'DE','florida'=>'FL','georgia'=>'GA','guam'=>'GU','hawaii'=>'HI','iowa'=>'IA','idaho'=>'ID','illinois'=>'IL','indiana'=>'IN','kansas'=>'KS','kentucky'=>'KY','louisiana'=>'LA','massachusetts'=>'MA','manitoba'=>'MB','maryland'=>'MD','maine'=>'ME','michigan'=>'MI','minnesota'=>'MN','missouri'=>'MO','mississippi'=>'MS','montana'=>'MT','north carolina'=>'NC','north dakota'=>'ND','nebraska'=>'NE','new hampshire'=>'NH','new jersey'=>'NJ','newfoundland and labrador'=>'NL','new mexico'=>'NM','nova scotia'=>'NS','northwest territories'=>'NT','nunavut'=>'NU','nevada'=>'NV','new brunswick'=>'NW','new york'=>'NY','ohio'=>'OH','oklahoma'=>'OK','ontario'=>'ON','oregon'=>'OR','pennsylvania'=>'PA','prince edward island'=>'PE','puerto rico'=>'PR','quebec'=>'QC','rhode island'=>'RI','south carolina'=>'SC','south dakota'=>'SD','saskatchewan'=>'SK','tennessee'=>'TN','texas'=>'TX','utah'=>'UT','virginia'=>'VA','virgin islands'=>'VI','vermont'=>'VT','washington'=>'WA','wisconsin'=>'WI','west virginia'=>'WV','wyoming'=>'WY','yukon'=>'YT');
	return $etats[strtolower($etat)];
}
function getRetsLogos($id,$class='Photo',$resource='Agent'){
	global $options;
	$photo = $options['RETS']->GetObject($resource, $class, $id, "1", $options['IMG_LINK_ONLY'] == 1 ? 1 : 0 );
	$photo = $photo[0];	
	if($photo['ReplyCode'] == '20409' || substr($photo['Data'],0,5)=='<RETS' || $photo['Success'] !== true) return array();	

	if($options['IMG_LINK_ONLY']){
		if(!empty($options['WORKPATH'])){
			$url = $options['WORKPATH'].'Logos-'.$id.'.jpg';
			$data = file_get_contents($photo['Location']);
			file_put_contents($url,$data);
		}else{
			$url = $photo['Location'];
			$data='';
		}
	}
	else{
		$data = $photo['Data'];
		$url = $options['WORKPATH'].'Logos-'.$id.'.jpg';
		file_put_contents($url,$data);
	}
	if ($photo['Success'] == true) {		
		return array($url,md5($data)); 
	}
}
function getRetsImages($ref,$mls = '',$workpath= '',$debug =false,$updated = false , $class='',$resource='Property'){
	// $updated true / false / -1 (IMAGE['NO_UPDATE'] = true)
	global $options;
	if($ref == ''){
		logMsg("******(".$options['MYPID'].") ".($updated ? "[ UPDATED ] " : '' )." REF VIDE : ".$mls."**********");
		return array();
	}
	if($mls == '') $mls = $ref;
	$lancement = time();
	if($class == '')
		$class = 'Photo';
	$photos = $options['RETS']->GetObject($resource, $class, $mls, "*", $options['IMG_LINK_ONLY'] == 1 ? 1 : 0 );

	if($photos[0]['ReplyCode'] == '20403') return array();
	if(substr($photos[0]['Data'],0,5)=='<RETS') return array();

	foreach($photos as $photo){
		$description = $photo['Content-Description'];
		$poids = $photo['Object-ID'];
		if($options['IMG_LINK_ONLY']){
			if(!empty($workpath)){
				$url = $workpath.$ref.'-'.$poids.'.jpg';
				$data = file_get_contents($photo['Location']);
				file_put_contents($url,$data);
			}else{
				$url = $photo['Location'];
				$data='';
			}
		}
		else{
			$data = $photo['Data'];
			$url = $options['PATH_IMG'].$ref.'-'.$poids.'.jpg';
			file_put_contents($url,$data);
		}
		if ($photo['Success'] == true) {
			$image['POIDS'] = $poids;
			$image['URL_IMAGE'] = $url;
			$options['IMGS'][$url]	=	1;
			$image['REF_PORTAIL'] = $ref;
			if($updated === -1 )
				$image['NO_UPDATE']     = true;
			$image['MD5_IMAGE'] = md5($ref.$data);
			$image['TITRE_IMAGE'] = $description != 'null' ? $description:NULL;
			if($options['IMG_LINK_ONLY'] !== true )
				$image['KEEP_IMAGE'] = true;
			else
				$image['KEEP_IMAGE'] = false;
			$images[] = $image;
			$image = array();
			++$imgCount;
		}
	}
	logMsg("******(".$options['MYPID'].") ".($updated ? "[ UPDATED ] " : '' )."GET IMAGE SUCESS DE ".$ref."==>".$imgCount." en (".format_time( time()- $lancement ).")**********");
	return $images;
}
function getRetsPhotoProfil($ref,$search,$class=''){
	global $options;
	if($mls == '') $mls = $ref;	
	$lancement = time();
	if($class == '')
		$class = 'Photo';
	if($search == '')	
		$search = 'ActiveAgent';
		
	$photos = $options['RETS']->GetObject($search, $class, $mls, "1", $options['IMG_LINK_ONLY'] == 1 ? 1 : 0 );
	if($photos[0]['ReplyCode'] == '20403') return array();
	if(substr($photos[0]['Data'],0,5)=='<RETS') return array();
	
	foreach($photos as $photo){		
		$description = $photo['Content-Description'];
		$poids = $photo['Object-ID'];
		if($options['IMG_LINK_ONLY']){
			$url = $photo['Location'];
			$data='';
		}
		else{
			if(!is_dir($options['PATH_IMG'].'agents/')) mkdir($options['PATH_IMG'].'agents/'); 
			$data = $photo['Data'];
			$url = $options['PATH_IMG'].'agents/'.$ref.'.jpg';
			file_put_contents($url,$data);
		}		
		if ($photo['Success'] == true) {
			$image['URL_LOGO_USER'] = $url;
			$image['MD5_LOGO_USER'] = md5(implode('',$image).$data);
			return $image;
		}
	}
	
	logMsg("******(".$options['MYPID'].") GET IMAGE SUCESS DE ".$ref."==>".$imgCount." en (".format_time( time()- $lancement ).")**********");
	return $images;
}

function retsGetMetadata($searchtype,$class){
	global $options;
	$params = array(
		'Type' => 'METADATA-TABLE',
		'ID'   => $searchtype.':'.$class,
	);
	$result = $options['RETS']->RETSRequest($options['RETS']->capability_url['GetMetadata'], $params);
	$result = simplexml_load_string($result[1]);
	$data = $result->METADATA->{'METADATA-TABLE'};

	foreach($data->Field as $field){
		$options['FIELDS'][(string)$field->SystemName] =  (string)$field->StandardName != '' ?  (string)$field->StandardName : (string)$field->LongName;//array( (string)$field->StandardName , (string)$field->DBName,(string)$field->LongName);
	}	
}
function retsRequest($searchType,$class, $query, $standardNames=false, $key='', $limit=NULL, $select='', $format='COMPACT-DECODED'){
	global $options;
	if(empty($options['RETS'])){
		echo "______________ ERROR CONNEXION ____________<br>";
		logMsg("______________ ERROR CONNEXION ____________");	
		return array();
	}
	$params = array(
		'Query'			=>	$query == '*' ? '*' : '('.$query.')',
		'SearchType'	=>	$searchType,
		'QueryType'		=>	'DMQL2',
		'Limit'       	=>	$limit,
		'Class'			=>	$class,
		'Format'		=>	$format,				
	);
	if( $select ){
		$params['Select'] = $select;
	}
	$results = $options['RETS']->RETSRequest($options['RETS']->capability_url['Search'], $params);
	if($standardNames) retsGetMetadata($searchType,$class);
	return result_rets($results[1],$key,$standardNames);
}
function display_xml_error($error, $xml,$sep = "<br />"){
    $return  = $xml[$error->line - 1] . $sep;
    $return .= str_repeat('-', $error->column) . "^$sep";

    switch ($error->level) {
        case LIBXML_ERR_WARNING:
            $return .= "Warning $error->code: ";
            break;
         case LIBXML_ERR_ERROR:
            $return .= "Error $error->code: ";
            break;
        case LIBXML_ERR_FATAL:
            $return .= "Fatal Error $error->code: ";
            break;
    }

    $return .= trim($error->message) .
               "$sep  Line: $error->line" .
               "$sep  Column: $error->column";

    if ($error->file) {
        $return .= "$sep  File: $error->file";
    }
    return "$return$sep--------------------------------------------$sep";
}
function event_log($log, $file = "", $out = false) {
	preg_match('/.*\/(.*)\/(.*)\.php$/',$_SERVER['SCRIPT_NAME'],$result);
	$type = $result[1];
	$name_script = $result[2];
	if(!defined("PATH_LOG")) define("PATH_LOG","/var/www/cron.previsite.net/log/");
	if(!file_exists(PATH_LOG.$type)){ mkdir(PATH_LOG.$type);}
  if($file == "") $file = PATH_LOG.$type."/".$name_script.date('-Y-m-d').".log";
  
  // 2010-11-05 RS : ajout du pid et usage de la ram 
  $log .= " - (PID ".getmypid()." ram usage: ".(ceil(memory_get_usage()/1024.0))."kb)";

  if($out) echo date('Y-m-d H:i:s')." ".$log."\r\n";
  $log = date('Y-m-d H:i:s')." ".$log."\r\n";
  if(file_exists($file)) {
      $fp = @fopen($file, "r");
      $content = fread($fp, 1000000);
      @fclose($fp);
  }
  $fp = fopen($file, "w+");
  fputs($fp, $log.$content);
  @fclose($fp);
}
function export_verif_action(&$action){
	$error = array();
	switch($action['TYPE']){
		case 'FILE':
			if(empty($action['FILENAME'])) 	$error[] = 'FILENAME is required';
			if(empty($action['PATH'])) 	 	$error[] = 'PATH is required';
			return $error;
		case 'FTP':
			if(empty($action['FILENAME'])) 	 $error[] = 'FILENAME is required';
			if(empty($action['FTP_HOST'])) 	 $error[] = 'FTP_HOST is required';
			if(empty($action['FTP_USER'])) 	 $error[] = 'FTP_USER is required';
			if(empty($action['FTP_PASS'])) 	 $error[] = 'FTP_PASS is required';
			return $error;
		default:
			$errors[] = 'ACTION Doit etre FILE Ou FTP';
		return  $errors;
	}
	return true;
}
function export_action(&$action,&$feed){
	if($action['TYPE'] == "FILE"){
		$filename = $action['PATH'].'/'.$action['FILENAME'];
		file_put_contents($filename,$feed);
		if(!empty($action['CMD'])){
			exec($action['CMD'],$return);
		}
	}
	else{
		$fileTmp = PATH_FTP_ARCHIVES.'exports/'.$action['FILENAME'];
		file_put_contents($fileTmp,$feed);
		if($conn_id = ftp_connect($action['FTP_HOST'])){
			ftp_set_option($conn_id, FTP_TIMEOUT_SEC, 10);
			if(ftp_login($conn_id, $action['FTP_USER'], $action['FTP_PASS']) ) {//&&
				if(isset($action['PATH']))
					$filename = $action['PATH'].'/'.$action['FILENAME'];
				else $filename = $action['FILENAME'];
				ftp_put($conn_id,$filename,$fileTmp,FTP_BINARY);
			}
		}
	}
}

function generate_description($tour, $lang) {
	$url_generate_desc = 'http://api.previsite.com/clean_description/';

	$http_params = array(
		'id' => $tour,
		'lang' => $lang,
		'todo' => 'translate'
	);

	$url = $url_generate_desc.'?'.http_build_query($http_params);
	$contents = @file_get_contents($url);
	return $contents;
}

function update_tour_data($tour, $params) {
	$res = null;
	if(is_guid($tour)) {
		$url_update = str_replace('#TOUR#', $tour, WS_UPDATE_TOUR_STANDALONE);
		$params['method'] = 'post';
		$res = file_get_contents($url_update.'?'.http_build_query($params));
	}
	return $res;
}

function update_diff_data($diff, $params) {
	$res = null;
	if(is_guid($diff)) {
		// @status @reference @expiration @url_listing @date_clicks @nb_clicks @pub_error_mess
		$url_update = str_replace('#ID#', $diff, WS_URL_UPDATE_DIFF);
		$params['method'] = 'post';
		$res = file_get_contents($url_update.'?'.http_build_query($params));
	}
	return $res;
}

function currency_conversion_amount ($amount_from, $currency_from, $currency_to) {
  $amount_to = $amount_from  * currency_conversion_rate($currency_from, $currency_to);
  return $amount_to;
}
function currency_conversion_rate ($currency_from, $currency_to) {
	if( $currency_from == $currency_to ) return 1;
	if(USE_MEMCACHE) $mc = @memcache_connect(IP_MEMCACHE2, 11211);
	$key = 'rate-'.$currency_from.'-'.$currency_to;
	$exchange_rate = 1;
	if(!empty($mc) && is_object($mc)) {
		$exchange_rate = @memcache_get($mc, $key);  		
  	}
	if(empty($exchange_rate) || $exchange_rate == 1 ){
		$url = "http://quote.yahoo.com/d/quotes.csv?s=" . $currency_from . $currency_to . "=X" . "&f=l1&e=.csv";
		$handle  = fopen($url, "r");
		$exchange_rate = fread($handle, 2000);
		fclose($handle );
		@memcache_set($mc, $key, $exchange_rate, 0, 21600);
	}
	return $exchange_rate;  
}
function verif_xml($feed,$sendMail = false,$display_error=false){
	libxml_use_internal_errors(true);
	if(!simplexml_load_string($feed)){
		$content = explode("\n",$feed);
		$errors = libxml_get_errors();
		if($display_error){
			foreach ($errors as $error) {
				$message .= display_xml_error($error, $content);
			}			
		}
		libxml_clear_errors();
		if($sendMail)
			sendMail('import@previsite.com', 'export Error', 'Export error', $message);
		if($display_error){
			return $message;
		}
		return false;
	}
	return true;
}
function us_format_price($price){
	return preg_replace(array('#\.0{1,2}$#','#\,0{1,2}$#','#(\,|\.)#'),array('','',''),$price);
}


function sendAlertEmail($script_name, $body, $type = "import", $emails_report = array(), $subject_complement = ""){
	$phpmail = new PHPMailer();
	$phpmail->IsSMTP();
	$phpmail->IsHTML(true);
	$phpmail->Host      = SMTP_MAIL;
	$phpmail->From      = "gateway@previsite.com";
	$phpmail->FromName  = ucFirst(strtolower($type)).' '.$script_name;
	$phpmail->WordWrap  = 70;
	$phpmail->Subject   = ucFirst(strtolower($type)).' alert - '.$script_name.($subject_complement != "" ? " - ".$subject_complement : "");

	$phpmail->Body = "-------------DETAILS-----------<br />".$body;
	//$phpmail->AddAddress("gateway@previsite.com","Gateway");
	$phpmail->AddAddress("julien@previsite.com","Gateway");
	if(count($emails_report) > 0){
		foreach($emails_report as $email_report){
			$phpmail->AddAddress( $email_report, "");
		}
	}
	$phpmail->Send();
}

function getSmallDescription($src,$minLength=9999999) {
	//on prend le minmum de caract√®re
	//suivi de tout les caract√®res qui ne sont pas un point ou si un point il faut que se soit un chiffre d√©cimal
	//suivi d'un point qui n'est pas d'un chiffre d√©cimal
	preg_match('/^.{'.$minLength.'}(?:[^.]|(?<=[0-9])\.|\.(?=[0-9]))*(?<![0-9])\.(?![0-9])/s',$src,$m);
	if (count($m)==0) {return $src;}
	return $m[0];
}

/**
 * translateText traduit un text en 1 ou plusieurs langue
 * @param $text String
 * @param $fromLang String
 * @param $toLang String|Array
 * @return array($toLang[0]=>'text traduit',$toLang[1]=>'texte traduit')
 * si erreur return array('ERROR'=>'')
 */
function translateText($text,$fromLang,$toLang) {
	$e='';
	if (empty($text)) {
		$e.='empty text, ';
	}
	if (empty($fromLang)) {
		$e.='empty from lang, ';
	}
	if (empty($toLang)) {
		$e.='empty to lang';
	}
	if (!empty($e)) {
		return array('ERROR'=>$e);
	}
	
	if (is_array($toLang)) {
		$toLang=implode(',',$toLang);
	}
	
	$postdata=array(
		'text'=>$text,
		'from'=>$fromLang,
		'to'=>$toLang
	);
	
	$curl = curl_init();
	curl_setopt($curl, CURLOPT_URL, 'http://translate.previsite.net/translate.php');
	curl_setopt($curl, CURLOPT_POST, 1);
	curl_setopt($curl, CURLOPT_POSTFIELDS, $postdata);
	curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
	$r=curl_exec($curl);
	curl_close($curl);
	
	$json=json_decode($r,true);
	
	if (!empty($json) && $json['success']) {
		return $json['texts'];
	}
	
	return array('ERROR'=>is_array($json)?$json['error_mess']:'unkown error');
}

/**
 * getTextsTranslateFromVisite retourne la traduction des textes d'une visite. r√©sultat chercher en base. Si base vide => traduction en directe et stockage en base
 * @param $idVisite
 * @param $toLang String une seule langue
 * @return array("NOM_VISITE"=>'',"DESCRIPTION"=>'',"DESCRIPTION_VIDEO"=>'',"VOISINNAGE"=>'');
 * si erreur return array("ERROR"=>'msg erreur')
 */
function getTextsTranslateFromVisite($idVisite,$toLang) {
	$fieldToTranslate=array("NOM_VISITE"=>'',"DESCRIPTION"=>'',"DESCRIPTION_VIDEO"=>'',"VOISINNAGE"=>'');
	
	if (empty($idVisite) || empty($toLang)) {
		return array("ERROR"=>"params invalid");
	}
	
	$toLang=strtoupper($toLang);
	
	//essaye de r√©cup√©rer un desc d√©j√† traduit
	$url='http://api.previsite.com/rest/tour/'.$idVisite;
	$content=file_get_contents($url);
//	$json=json_decode($content);
	$json=json_decode($content, true);
	
	//la visite n'a pu √™tre r√©cup√©r√©e	
	if (empty($json)) {
		return array("ERROR"=>"can't access to visite by url: http://api.previsite.com/rest/tour/".$idVisite);
	}
	
//	$fromLang=$json->TOUR->ID_LANGUE;
	$fromLang=$json['TOUR']['ID_LANGUE'];
	
//	$obj=$json->TOUR->TEXTS->$toLang;
	
	//si la langue est traduite on arr√™te l√†
//	if (!empty($obj)) {
//		return (array)$obj;
//	}
	
	if(isset($json['TOUR']['TEXTS'][$toLang])) {
		return $json['TOUR']['TEXTS'][$toLang];
	}
	
	
	//si la langue n'est pas d√©j√† traduite on la traduit
	$postdata=array();
	
	foreach ($fieldToTranslate as $key => $value) {
		if (!isset($json['TOUR']['TEXTS'][$fromLang][$key]) /*|| empty($json->TOUR->TEXTS->$fromLang->$key)*/) {
			continue;
		}
		$arr=translateText($json['TOUR']['TEXTS'][$fromLang][$key]/*$json->TOUR->TEXTS->$fromLang->$key*/,$fromLang,$toLang);
		
		//error in translation
		if (!empty($arr['ERROR'])) {
			return array("ERROR"=>$arr['ERROR']);
		}
		$fieldToTranslate[$key]=$arr[$toLang];
		$postdata[strtolower($key).$toLang]=$arr[$toLang];
	}
	
	//ensuite on enregistre les modifs
	$curl = curl_init();
	curl_setopt($curl, CURLOPT_URL, 'http://api.previsite.com/rest/tour/'.$idVisite);
	curl_setopt($curl, CURLOPT_POST, 1);
	curl_setopt($curl, CURLOPT_POSTFIELDS, $postdata);
	curl_exec($curl);
	curl_close($curl);
	return $fieldToTranslate;
}

function currency_converter($price,$from,$to) { // A Ne plus utiliser Google pour la conversion
	return currency_conversion_amount ($price, $from, $to);
	/*$s=file_get_contents('http://www.google.com/ig/calculator?hl=en&q='.$price.strtoupper($from).'%3D%3F'.strtoupper($to));
	if ($s===false) {return 0;}
	preg_match('/rhs:[^"]*"([^"]+)/i', $s, $m);
	return round(preg_replace('/[^0-9 \.]/i', '',$m[1]),2);*/
}

function getIdShort($id) {
	return substr(str_replace('-','',$id),0,12);
}

/**
 * @param $idDiffusion id long ou court (12 char sans -)
 * @param $idUser id long ou court (12 char sans -). Si idDiffusion pas disponible remplir idUser
 * @param $idPortail id long ou court (4 char). Si idDiffusion pas disponible remplir idPortail
 * @param $domainMail mettre l'option DOMAINMAILLEAD  de OPTION_BUNDLE.    default @wpost.in
 * @param $prefixMail default wp
 * @return mail
 */
function getMailWPostIn($idDiffusion,$idUser='',$idPortail='',$domainMail='',$prefixMail='') {
	if (empty($domainMail)) {
		$domainMail=DOMAIN_MAIL_WP;
	}
	
	if (empty($prefixMail)) {
		$prefixMail=PREFIX_MAIL_WP;
	}
		
	$idDiffusion=trim(strtolower($idDiffusion));
	$idUser=trim(strtolower($idUser));
	$idPortail=trim(strtolower($idPortail));
	
	//si pas short => transform
	if (!preg_match('/^[0-9a-f]{12}$/',$idDiffusion)) {
		$idDiffusion=getIdShort($idDiffusion);
	}
	if (!preg_match('/^[0-9a-f]{12}$/',$idUser)) {
		$idUser=getIdShort($idUser);
	}
	if (!preg_match('/^[0-9a-f]{4}$/',$idPortail)) {
		$idPortail=substr($idPortail,0,4);
	}
	
	//si id diffusion existe => utilis√© en priorit√©
	if (preg_match('/^[0-9a-f]{12}$/',$idDiffusion)) {
		return $prefixMail.$idDiffusion.$domainMail;
	}
	
	//si pas de diffusion utiliser user, portail
	if (preg_match('/^[0-9a-f]{12}$/',$idUser) && preg_match('/^[0-9a-f]{4}$/',$idPortail)) {
		return $prefixMail.$idUser.$idPortail.$domainMail;
	}
	
	//si pas de id diffusion ni user/portail => vide
	return '';
}

function getRegions($iso_pays){
	if(is_file(PATH_FTP_EXPORTS_151.'caches/cities_'.strtoupper($iso_pays).'.cache')){
		$content = file_get_contents(PATH_FTP_EXPORTS_151.'caches/cities_'.strtoupper($iso_pays).'.cache');
		$json = json_decode($content,true);
		$regions = array();
		if(count($json['PARENTS']) == 1){
			foreach($json['CITIES'] as $nom=>$detail_city){			
				if( isset($detail_city[1][0]) && $tmp[$detail_city[1][0]] !== 1  && $detail_city['ID_REGION'] != $detail_city[1][0]){
					$regions[] =	$detail_city[0];
					$tmp[$detail_city['ID_REGION']] = 1;
				}
			}
		}
		elseif(count($json['PARENTS']) > 1){
			foreach($json['CITIES'] as $nom=>$detail_city){
				$region_name = utf8_decode($json['PARENTS'][$detail_city[1][1]]);
					
				if( isset($detail_city[1][1]) && $tmp[$region_name] !== 1 ){
					$regions[] = $region_name;
					$tmp[$region_name] = 1;
				}
			}
		}
		return $regions;
	}
	return false;
}
function get_usRefEtat($etat){
	$etats = array('alberta'=>'AB','alaska'=>'AK','alabama'=>'AL','arkansas'=>'AR','arizona'=>'AZ','british columbia'=>'BC','california'=>'CA','colorado'=>'CO','connecticut'=>'CT','district of columbia'=>'DC','delaware'=>'DE','florida'=>'FL','georgia'=>'GA','guam'=>'GU','hawaii'=>'HI','iowa'=>'IA','idaho'=>'ID','illinois'=>'IL','indiana'=>'IN','kansas'=>'KS','kentucky'=>'KY','louisiana'=>'LA','massachusetts'=>'MA','manitoba'=>'MB','maryland'=>'MD','maine'=>'ME','michigan'=>'MI','minnesota'=>'MN','missouri'=>'MO','mississippi'=>'MS','montana'=>'MT','north carolina'=>'NC','north dakota'=>'ND','nebraska'=>'NE','new hampshire'=>'NH','new jersey'=>'NJ','newfoundland and labrador'=>'NL','new mexico'=>'NM','nova scotia'=>'NS','northwest territories'=>'NT','nunavut'=>'NU','nevada'=>'NV','new brunswick'=>'NW','new york'=>'NY','ohio'=>'OH','oklahoma'=>'OK','ontario'=>'ON','oregon'=>'OR','pennsylvania'=>'PA','prince edward island'=>'PE','puerto rico'=>'PR','quebec'=>'QC','rhode island'=>'RI','south carolina'=>'SC','south dakota'=>'SD','saskatchewan'=>'SK','tennessee'=>'TN','texas'=>'TX','utah'=>'UT','virginia'=>'VA','virgin islands'=>'VI','vermont'=>'VT','washington'=>'WA','wisconsin'=>'WI','west virginia'=>'WV','wyoming'=>'WY','yukon'=>'YT');
	return $etats[strtolower($etat)];
}
function getVille($string1,&$communes){
	$string =	str_replace(array('√Ä','√Å','√Ç','√É','√Ñ','√Ö','√†','√°','√¢','√£','√§','√•'),'a',$string1);
	$string =	str_replace(array('√í','√ì','√î','√ï','√ñ','√ò','√≤','√≥','√¥','√µ','√∂','√∏'),'o',$string);
	$string =	str_replace(array('√à','√â','√ä','√ã','√®','√©','√™','√´'),'e',$string);
	$string =	str_replace(array('√á','√ß'),'c',$string);
	$string =	str_replace(array('√å','√ç','√é','√è','√¨','√≠','√Æ','√Ø'),'i',$string);
	$string =	str_replace(array('√ô','√ö','√õ','√ú','√π','√∫','√ª','√º'),'u',$string);
	$string =	str_replace('√ø','y',$string);
	$string =	str_replace(array('√ë','√±'),'n',$string);
	$string	=	preg_replace('#\s{0,}[0-9]#i','',strtoupper($string));
	$string	=	preg_replace('#[^a-z]#i','-',strtoupper($string));
	return $communes[$string];
}
function usStateFromZip($code_postal){
	global $m;	
	$key = md5('state-us-'.$code_postal);
	if(!isset($m) && USE_MEMCACHE){
		$m = memcache_connect(IP_MEMCACHE, 11211);	
	}
	if( USE_CACHE && $m!==null ){
		$state = '';
		$state = memcache_get($m, $key);		
		if( $state == '' ){
			$link = 'http://usa.youbianku.com/zipcode/'.$code_postal;
			$content = file_get_contents($link);
			preg_match("#<span itemprop='addressRegion'>(.*) - .*</span>#", $content, $state);
			$state = $state[1];
			if($state != ''){
				memcache_set($m, $key, $state);
			}
		}
	}
	else{
		$link = 'http://usa.youbianku.com/zipcode/'.$code_postal;
		$content = file_get_contents($link);
		preg_match("#<span itemprop='addressRegion'>(.*) - .*</span>#", $content, $state);
		$state = $state[1];		
	}
	return $state;	
}
?>
