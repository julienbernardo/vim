<?php

require_once('../include/global.php');
require_once('../include/fonctions.php');
require_once('./descriptionManager.php');

$lang   = strtolower($_REQUEST['lang']);

class TraductionManager extends DescriptionManager {
	var $regType = "^ID_TYPE";
	var $regNb = "^NB_";

	private function replaceByAllValues($search, $replace, $source){
		$return  = array();
		if(!is_array($source)) $source=  array($source);
		if(!is_array($replace)) $source=  array($replace);
		for($i = 0; $i < count($source); $i++){
			if(count($replace) > 0){
				$keys = array_keys($replace);
				foreach($keys as $k) {
					$return[] = str_replace($search, $replace[$k], $source[$i]);
				}
			}
		}
		return $return;
	}

	private function getAllVersions($sentence){
		if(preg_match_all('/#([A-Z_]+)#/', $sentence, $infos) > 0){
			$sentences = array($sentence);
			foreach($infos[1] as $info){
				$tmp = array();
				$replace = array();
				for($i=0; $i < count($sentences); $i++){
					if(preg_match('/'.$this->regType.'/', $info) > 0){
						$replace = $this->dico[$info];
					}else if(preg_match('/'.$this->regNb.'/', $info) > 0){
						$replace = array(1, 2);
					}else{
						continue;
					}
					$tmp = array_merge($tmp, $this->replaceByAllValues("#".$info."#", $replace, $sentences[$i]));
				}
				if(count($tmp) > 0) $sentences = $tmp;
				print_r($sentences);
			}
		}
		return $sentences;
	}

	public function getAllSentences($lang){
		$this->dico = $this->loadDicoTrad($lang);
		//print_r($this->dico);
		$sentences = array();
		if(count($this->dico) > 0){
			for($i=0; $i < count($this->dico['catch']) ;$i++){
				$sentence = $this->dico['catch'][$i]; 
				$sentences[] = $this->getAllVersions($sentence);
				break;
			}
		}
		return $sentences;
	}
}

$output = "false";
$desc = new TraductionManager();
$output	= $desc->getAllSentences('fr');
print_r($output);
exit;


?>
