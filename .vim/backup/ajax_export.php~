<?php
require_once('DB.php');
require_once 'phpmailer2/class.phpmailer.php';
require_once('include/global.php');
require_once('include/function.php');
require_once('include/function.db.php');
require_once('include/function.cron.php');
require_once('previsite/GetDsn.php');

$db_data['name'] = 'gateway';
$db_data['pool'][$db_data['name']]['NAME'] = $db_data['name']; 
$db_data['pool'][$db_data['name']]['DSN'] = DSN_GATEWAY; 

$todo 	 = $_REQUEST['todo'];
$partner = $_REQUEST['partner'];
$script  = $_REQUEST['script'];

$db_data['name'] = "gateway";

$out = "false";
switch($todo){	
	case "kill":
		$pid = $_REQUEST['pid'];
		if($script != "" && $pid != ""){
			$infos = getExportInfos($script);
			if($infos['ID_STATUT_CRON_EXECUTION'] == 4){ $infos['SERVER_CRON'] = "dev";}
			$cmd = 'sudo '.($list_srv[$infos['SERVER_CRON']] != "" ? 'ssh root@'.$list_srv[$infos['SERVER_CRON']].' ' : '').'kill -9 '.$pid;
			pclose(popen($cmd,'r'));
		}else{ break;}
	case "force_reset":
		if($script != ""){
			$infos = getExportInfos($script);
			if(is_guid($infos['ID_CRON_EXECUTION'])){
				if($infos['ID_STATUT_CRON_EXECUTION'] > -1 && $infos['ID_STATUT_CRON_EXECUTION'] < 3){
					update_cron_error($infos['ID_CRON_EXECUTION'], $script);
				}else if($infos['ID_STATUT_CRON_EXECUTION'] == 4){
					debug_end_export($infos['ID_CRON_EXECUTION'], $script);
				}
			}
			$out = "true";
		}
		break;
		
	case "force_execute":
		if($script != ""){
			$infos = getExportInfos($script);
			$cmd = 'sudo '.($list_srv[$infos['SERVEUR_EXPORT']] != "" ? 'ssh root@'.$list_srv[$infos['SERVEUR_EXPORT']].' ' : '').'php '.PATH_MAIN.'cron_export.php '.$script.' > '.PATH_LOG.'export_'.$script.'.log &';
			pclose(popen($cmd,'r'));
			$out = "true";
		}
		break;


	case 'get_log':
		$file = $_REQUEST['file'];
		$short = ($_REQUEST['short'] == 'true');
		if($file != "" && $script != ""){
			$script = 'export_'.$script;
			switch($file){
				case "errorphp.cmd": $file = str_replace('#SCRIPT#', $script.".cmd", ERROR_LOG_FILE);break;
				case "errorphp": $file = str_replace('#SCRIPT#', $script, ERROR_LOG_FILE);break;
				default: $file = PATH_LOG.$script."-".$file.".log";break;
			}
			if(file_exists($file)){ 
				$out = file_get_contents($file);
				if($short && strlen($out) > 50000){
					$out = substr($out, 0, 50000);
				}
			}else{ $out = "[ERROR] File: ".$file." not found";}
		}
		break;
		
	case "export_config":
		$server = $_REQUEST['server'];
		if(in_array($server, array_keys($list_srv))){
			$file = PATH_IMPORT_OLD_CONFIG."config_export_".$server.".php";
			if(file_exists($file)){
				include($file);
				if(count($config_export[$script]) > 0){
					$export = $config_export[$script];
					
					$out = array('fields' => array(), 'portals' => array(), 'options'=> array(), 'logs' => array(), 'last_exec' => array());
					$out['fields']['export_code'] = $script;
					$out['fields']['export_server'] = $server;
					$out['fields']['export_name'] = $export['SCRIPT_NAME'];
					$out['fields']['execution_time'] = $export['TIME_MAX'];
					$out['fields']['execution_period'] = $export['PERIOD'];
					$out['fields']['execution_archive'] = $export['ARCHIVE_DELAY'];
					
					for($i=0; $i < count($export['PARTNERS']); $i++){
						$id = $export['PARTNERS'][$i];
						if(is_guid($id)){
							$sql = "SELECT NOM_PORTAIL FROM PORTAIL WHERE ID_PORTAIL='".$id."'";
							$name = db_getOne($sql, $db_data['name']);
							$out['portals'][] = $id."#".$name."#1";
						}
					}
					
					if(!is_array($export['OPT_DETAILS'])){ $export['OPT_DETAILS'] = array();}
					$options = array('DEBUG', 'DNS', 'USE_CACHE', 'CODE_REQUETTE', 'ACTION', 'REPS', 'FORCE_UPDATE', 'DELETE_TOURS', 'FORCE_UPDATE_CACHE', 'STATUT_DIFFUSION', 'ID_UTILISATEURS');
					foreach($options as $v){
						if(isset($export[$v])){
							$export['OPT_DETAILS'][$v] = $export[$v];
						}
					}
					
					if(count($export['OPT_DETAILS']) > 0){
						if(count($export['OPT_DETAILS']['FIELDS']) > 0){
							foreach($export['OPT_DETAILS']['FIELDS'] as $k=>$v){
								$export['OPT_DETAILS']['FIELDS_'.$k] = $v;
							}
						}
						unset($export['OPT_DETAILS']['FIELDS']);
						foreach($export['OPT_DETAILS'] as $k=>$v){	
							$tmp = "";
							if(is_array($v)){
								if($k == 'DNS'){
									for($i = 0;$i < count($v); $i++){
										if(preg_match('/@[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.([0-9]{1,3})/i', $v[$i], $result) > 0){
											$tmp .= $result[1].";";
										}
									}
									$tmp = preg_replace('/;$/i', '', $tmp);
								}else if($k == 'ACTION'){
									$tmp = json_encode($v);
								}else{ 
									$tmp = implode( ';', $v);
								}
							}else if($v === false){ $tmp = 0;}
							else if($v === true){ $tmp = 1;}
							else if($k == "DATE"){
								if(preg_match('/^([0-9]{4})-([0-9]{2})-([0-9]{2})$/i', $v, $result) > 0){
									$tmp = round(mktime(0, 0, 0, $result[2], $result[3], $result[1]) / mktime(0, 0, 0, (date('m')-1),date('d'), date('Y'))*10)/10;
								}
							}else{ $tmp = $v;}
							$out['options'][$k] = $tmp;
						}
					}
					
					include(PATH_IMPORT_OLD_CONFIG.'config_export.php');
					$out['fields']['export_activate'] = (in_array( $script, $list_activated_export) ? "1" : "0");
					
					$out = json_encode($out);
				}
			}
		}
		break;
		
	case "get_export":
		$server = $_REQUEST['server'];
		if(in_array($server, array_keys($list_srv))){
			$file = PATH_IMPORT_OLD_CONFIG."config_export_".$server.".php";
			if(file_exists($file)){
				include($file);
				$out = '<option value="">--- select an export --</option>';
				$exports = array_keys($config_export);
				sort($exports);
				foreach($exports as $v){
					$out .= '<option value="'.$v.'">'.$v.'</option>';
				}
			}
		}
		break;
	
	case "save_export":
		$fields = array(
			'execution_archive', 'execution_period', 'execution_time', 
			'export_activate', 'export_code', 'export_code_old', 'export_name', 'export_server', 'export_description',
			'options', 'portals'
		);
		$infos = array();
		foreach($fields as $v){ $infos[$v] = $_REQUEST[$v];}

		$isNew = ($_REQUEST['new'] == 'true');
		$infos['portals'] = json_decode($infos['portals'], true);
		$infos['options'] = json_decode($infos['options'], true);
		$fieldsNotEmpty = array(
			'export_code', 'export_name', 'export_server',
			'execution_archive', 'execution_period', 'execution_steps', 'execution_time',
		);
		
		$isOk = true;
		$error = array();
		foreach($fieldsNotEmpty as $v){
			if($infos[$v] === ""){ 
				$isOk = false;
				$error[] = $v;
			}
		}

		if($isOk){		
			if($infos['export_code'] == 'exec_cron'){
				$out = json_encode(array('error' => array('export_code'), 'text' => 'Reserved script name:'.$infos['export_code']));
			}else if(($isNew || (!$isNew && $infos['export_code_old'] !=  $infos['export_code'])) && count(getExportInfos($infos['export_code']))  > 0){
				$out = json_encode(array('error' => array('export_code'), 'text' => 'Script name:'.$infos['export_code'].' already exists'));
			}else{
				updateExportInfos($infos);
				$out = "true";
			}
		}else{ $out = json_encode(array('error' => $error, 'text' => 'An error has occured. Check your fields'));}
		if($out != "true"){ break;}
		$script = $infos['export_code'];
	case "load_export":
		if($script != ""){
			$infos = getExportInfos($script);
			if(count($infos) > 0){
				$out = array('fields' => array(), 'portals' => array(), 'options'=> array(), 'logs' => array(), 'last_exec' => array());
			
				$fields = array('CODE_EXPORT' => 'export_code', 'NOM_EXPORT' => 'export_name', 'TEMPS_MAX_EXPORT' => 'execution_time', 'PERIODE_EXPORT' => 'execution_period', 'ARCHIVE_DELAI_EXPORT' => 'execution_archive', 'ID_STATUT_EXPORT' => 'export_activate', 'DATE_MODIFICATION_EXPORT' => 'export_update', 'SERVEUR_EXPORT' => 'export_server', 'DESCRIPTION_EXPORT' => 'export_description');
				foreach($infos as $k=>$v){ $out['fields'][$fields[$k]] = $v;}
				$out['fields']['export_update'] = 'Last update: '.$out['fields']['export_update'];
				
				$out['fields']['execution_state'] = "images/icon_";
				if($infos['ID_STATUT_CRON_EXECUTION'] > -1 && $infos['ID_STATUT_CRON_EXECUTION'] < 3){
					$out['fields']['execution_state'] .= "working.gif";
				}else if($infos['ID_STATUT_EXPORT'] == 1){ 
					$out['fields']['execution_state'] .= "waiting.gif";
				}else{	
					$out['fields']['execution_state'] .= "stop.gif";
				}
				
				$tmp = getExportOptions($script);
				if(count($tmp > 0)){ 
					foreach($tmp as $cat=>$tab){
						foreach($tab as $k=>$v){
							$out['options'][$k] = $v['VALEUR_EXPORT_OPTION'];
						}
					}
				}
		
				$out['portals'] = array_values(getExportPortails($script));
				for( $i=0; $i < count($out['portals']); $i++){
					$out['portals'][$i] = $out['portals'][$i]['ID_PORTAIL'].'#'.$out['portals'][$i]['NOM_PORTAIL'].'#'.$out['portals'][$i]['ID_STATUT_EXPORT_PORTAIL'];
				}
			
				$out['last_exec'] = getLastExecution( $script, "export");
				for($i= 0;$i < count($out['last_exec']); $i++){
					if(preg_match('/(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})/i', $out['last_exec'][$i]['DATE_DEBUT_CRON'], $date_start) > 0 
					&& preg_match('/(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})/i', $out['last_exec'][$i]['DATE_FIN_CRON'], $date_end) > 0 ){
						$out['last_exec'][$i]['DURATION'] =	mktime($date_end[4],$date_end[5],$date_end[6],$date_end[2],$date_end[3],$date_end[1]) - mktime($date_start[4], $date_start[5], $date_start[6], $date_start[2], $date_start[3], $date_start[1]);
						$out['last_exec'][$i]['DURATION'] = convert_duration_for_print($out['last_exec'][$i]['DURATION']);
						if($out['last_exec'][$i]['RESUME_CRON'] != ""){
							$tmp = explode(';', $out['last_exec'][$i]['RESUME_CRON']);
							foreach($tmp as $v){
								if(preg_match('/^([^:]+):(.*)$/i', $v, $result) > 0){
									$out['last_exec'][$i][$result[1]] = $result[2];
								}
							}
						}
					}
				}
				
				$script = 'export_'.$script;
				$cmd = "ls ".PATH_LOG.$script."-*";
				exec($cmd, $files);
				rsort($files);
				foreach($files as $k=>$file){
					if($k == 0 && (($infos['ID_STATUT_CRON_EXECUTION'] > -1 && $infos['ID_STATUT_CRON_EXECUTION'] < 3) || $infos['ID_STATUT_CRON_EXECUTION'] == 4)){
						$pid = "";
						if($infos['PID_CRON'] != ""){
							$pid = $infos['PID_CRON'];
						}else{
							$f = fopen( $file, "r");
							do{
								$l = fgets($f);
								if(preg_match('/ - \(PID ([\d]+) ram usage: [^\)]*\)/i', $l, $result) > 0){
									$pid = $result[1];
									break;
								}
							}while(!feof($f));
							fclose($f);
						}		
						if($pid != ""){
							if($infos['ID_STATUT_CRON_EXECUTION'] == 4){ $infos['SERVER_CRON'] = "dev";}
							$ps_cmd = 'sudo '.($list_srv[$infos['SERVER_CRON']] != "" ? 'ssh root@'.$list_srv[$infos['SERVER_CRON']].' ' : '')." ps ax";
							$ps = shell_exec($ps_cmd);
							if(preg_match_all("/(.*)\n/", $ps, $result) > 0){
								$ps = $result[1];
								foreach($ps as $k => $v){
									if($script== "export_video") echo "|".$v."|";
									if(preg_match('/^ *([0-9]+)/im', $v, $result) > 0 && $result[1] == $pid){
										if($script== "export_video") echo "FOUND";
										$out['pid'] = $pid;
										break;
									}
									if($script== "export_video") echo "\n";
								}
							}
						}
					}
					$out['logs'][] = str_replace($script.'-','',basename($file,".log"));
				}
				$cmd = "ls ".str_replace('#SCRIPT#', $script, ERROR_LOG_FILE);
				$files = array();
				exec($cmd, $files);
				if(count($files) > 0){ $out['logs'][] = 'errorphp';}
				
				if($hasCommand != ""){
					$cmd = "ls ".str_replace('#SCRIPT#', $script.".cmd", ERROR_LOG_FILE);
					$files = array();
					exec($cmd, $files);
					if(count($files) > 0){	$out['logs'][] = 'errorphp.cmd';}
				}		

				$out = json_encode($out);
			}
		}
		break;
}
echo $out;
exit;

?>
